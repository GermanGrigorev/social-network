{"version":3,"sources":["res/preloader.svg","res/logo.png","api/api.js","serviceWorker.js","Redux/profileReducer.js","Redux/dialogsReducer.js","Redux/authReducer.js","Redux/appReducer.js","Redux/reduxStore.js","components/NavBar/NavBar.jsx","components/News/News.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialog/Dialog.jsx","components/common/FormsControls.jsx","utils/validators/index.js","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/AboutMe/AboutMe.jsx","components/Profile/ProfileInfo/AboutMeChangingForm/AboutMeChangingForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddPostForm/AddPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/LoginForm/LoginForm.jsx","components/Login/Login.jsx","hocs/withStoreProvider.js","hocs/withSuspense.js","hocs/withHashRouter.js","App.js","index.js","components/common/Preloader.jsx","hocs/withAuthRedirect.js","utils/updateObjectInArray.js","Redux/friendsReducer.js","res/userIcon.png"],"names":["module","exports","axiosInstance","axios","withCredentials","baseURL","headers","profileApi","getUsersProfile","userId","get","response","data","setUsersProfile","profileInfo","aboutMe","fullName","lookingForAJob","lookingForAJobDescription","contacts","put","getStatus","updateStatus","status","putProfilePhoto","image","formData","FormData","append","usersApi","getUsers","currentPage","pageSize","follow","friendId","post","unfollow","delete","authApi","getAuthData","login","email","password","rememberMe","captcha","logout","securityApi","getCaptcha","Boolean","window","location","hostname","match","ADD_POST","DELETE_POST","SET_PROFILE_INFO","TOGGLE_IS_FETCHING","SET_STATUS","SET_PROFILE_IMAGE","initialState","profileImage","posts","isFetching","addPost","newPostText","type","setProfileInfo","profileData","setProfileImage","imageUrl","setStatus","profileReducer","state","action","id","length","message","likeCount","filter","p","postId","ADD_MESSAGE","dialogs","Name","messages","text","dialogsReducer","newMessageText","SET_USER_DATA","SET_CAPTCHA_URL","isAuth","isCaptchaRequired","captchaUrl","authorizeUser","payload","toggleIsCaptchaRequired","flag","setCaptchaUrl","setAuthInfo","dispatch","a","resultCode","authReducer","isInitialized","appReducer","reducers","combineReducers","dialogPage","profilePage","friendsPage","friendsReducer","auth","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","NavBar","className","to","withAuthRedirect","width","src","Message","props","Dialog","path","name","FormControl","input","meta","elementClassName","touched","error","element","TextArea","Input","required","value","maxLengthCreator","maxLength","maxLength100","reduxForm","onSubmit","handleSubmit","Field","component","placeholder","validate","Dialogs","dialogsElements","map","dialog","key","messagesElements","addMessage","DialogsContainer","this","React","Component","connect","ProfileStatusWithHooks","useState","editMode","setEditMode","useEffect","onChange","e","currentTarget","onBlur","changeStatus","autoFocus","onDoubleClick","Contact","contactName","contactValue","AboutMe","Object","keys","initialValues","ProfileInfo","defaultUserIcon","isOwner","event","target","files","uploadProfileImage","onClick","changeProfileInfo","Post","maxLength200","MyPosts","postElements","MyPostsContainer","Profile","ProfileContainer","refreshProfile","prevProps","prevState","snapshot","params","authorizedUserId","history","push","getUsersStatus","withRouter","toggleIsFetching","photos","large","imageFile","console","log","Header","logo","HeaderContainer","Login","url","stopSubmit","_error","withStoreProvider","withStoreProviderComponent","displayName","withSuspense","withSuspenseComponent","fallback","Preloader","withHashRouter","withHashRouterComponent","FriendsContainer","lazy","App","initializeApp","exact","from","render","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","preloader","withAuthRedirectComponent","updateObjectInArray","objArray","objKeyName","objKeyValue","newObjProps","obj","SET_FRIENDS","TOGGLE_FOLLOWED","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","friends","totalUsersCount","isFollowingInProgress","toggleFollowed","setCurrentPage","pageNumber","toggleIsFollowingInProgress","getFriends","items","totalCount","toggleFollowingFriend","asyncFunction","followed"],"mappings":"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","file":"static/js/main.9e40de33.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/preloader.b62dcd9b.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.52694f72.png\";","import * as axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '4c7b227d-d83d-45ab-9f12-6ba2c0dc507f',\r\n    },\r\n});\r\n\r\nexport const profileApi = {\r\n    async getUsersProfile(userId) {\r\n        const response = await axiosInstance.get(`profile/${userId}`);\r\n        return response.data;\r\n    },\r\n    async setUsersProfile(profileInfo) {\r\n        const {aboutMe, fullName, lookingForAJob, lookingForAJobDescription, contacts} = profileInfo;\r\n        const response = await axiosInstance.put(`profile`, {\r\n            aboutMe,\r\n            fullName,\r\n            lookingForAJob,\r\n            lookingForAJobDescription,\r\n            contacts,\r\n        });\r\n        return response.data;\r\n    },\r\n    async getStatus(userId) {\r\n        const response = await axiosInstance.get(`profile/status/${userId}`);\r\n        return response.data;\r\n    },\r\n    async updateStatus(status) {\r\n        const response = await axiosInstance.put('profile/status', {status: status});\r\n        return response.data;\r\n    },\r\n    async putProfilePhoto(image) {\r\n        const formData = new FormData();\r\n        formData.append('image', image);\r\n\r\n        const response = await axiosInstance.put('profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n            },\r\n        });\r\n        return response.data;\r\n    }\r\n};\r\n\r\nexport const usersApi = {\r\n    async getUsers(currentPage = 1, pageSize = 10) {\r\n        const response = await axiosInstance.get(`users?page=${currentPage}&count=${pageSize}`);\r\n        return response.data;\r\n    },\r\n\r\n    async follow(friendId) {\r\n        const response = await axiosInstance.post(`follow/${friendId}`);\r\n        return response.data;\r\n    },\r\n\r\n    async unfollow(friendId) {\r\n        const response = await axiosInstance.delete(`follow/${friendId}`);\r\n        return response.data;\r\n    },\r\n};\r\n\r\nexport const authApi = {\r\n    async getAuthData() {\r\n        const response = await axiosInstance.get('auth/me');\r\n        return response.data;\r\n    },\r\n    async login(email, password, rememberMe, captcha) {\r\n        const response = await axiosInstance.post('auth/login', {\r\n            email,\r\n            password,\r\n            rememberMe,\r\n            captcha,\r\n        });\r\n        return response.data;\r\n    },\r\n    async logout() {\r\n        const response = await axiosInstance.delete('auth/login');\r\n        return response.data;\r\n    },\r\n};\r\n\r\nexport const securityApi = {\r\n    async getCaptcha() {\r\n        const response = await axiosInstance.get('security/get-captcha-url');\r\n        return response.data;\r\n    },\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {profileApi} from \"../api/api\";\r\n\r\nconst ADD_POST = 'social-network/profile/ADD-POST';\r\nconst DELETE_POST = 'social-network/profile/DELETE_POST';\r\nconst SET_PROFILE_INFO = 'social-network/profile/SET_PROFILE_INFO';\r\nconst TOGGLE_IS_FETCHING = 'social-network/profile/TOGGLE_IS_FETCHING';\r\nconst SET_STATUS = 'social-network/profile/SET_STATUS';\r\nconst SET_PROFILE_IMAGE = 'social-network/profile/SET_PROFILE_IMAGE';\r\n\r\nlet initialState = {\r\n    fullName: '',\r\n    profileImage: '', //TODO возможно заменить на photos\r\n    aboutMe: '',\r\n    posts: [],\r\n    status: '',\r\n    lookingForAJob: false,\r\n    lookingForAJobDescription: '',\r\n    contacts: {},\r\n    isFetching: false,\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let post = {\r\n                id: state.posts.length,\r\n                message: action.newPostText,\r\n                likeCount: 2,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, post],\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter((p) => p.id !== action.postId),\r\n            };\r\n        case SET_PROFILE_INFO:\r\n            return {\r\n                ...state,\r\n                fullName: action.fullName,\r\n                aboutMe: action.aboutMe,\r\n                contacts: action.contacts,\r\n                lookingForAJob: action.lookingForAJob,\r\n                lookingForAJobDescription: action.lookingForAJobDescription,\r\n            };\r\n        case SET_PROFILE_IMAGE:\r\n            return {\r\n                ...state,\r\n                profileImage: action.imageUrl,\r\n            };\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: !state.isFetching,\r\n            };\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPost = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const deletePost = (postId) => ({type: ADD_POST, postId});\r\nexport const setProfileInfo = (profileData) => ({type: SET_PROFILE_INFO, ...profileData,});\r\nexport const setProfileImage = (imageUrl) => ({type: SET_PROFILE_IMAGE, imageUrl,});\r\nexport const toggleIsFetching = () => ({type: TOGGLE_IS_FETCHING,});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status,});\r\n\r\nexport const getUsersProfile = (userId) => {\r\n    return async (dispatch) => {\r\n        const data = await profileApi.getUsersProfile(userId);\r\n        dispatch(setProfileInfo(data));\r\n        dispatch(setProfileImage(data.photos.large));\r\n    }\r\n};\r\n\r\nexport const changeProfileInfo = (profileInfo) => {\r\n    return async (dispatch) => {\r\n        const data = await profileApi.setUsersProfile(profileInfo);\r\n        if (data.resultCode === 0) {\r\n            dispatch(setProfileInfo(profileInfo));\r\n        } else {\r\n            console.log(data.messages)\r\n        }\r\n    }\r\n};\r\n\r\nexport const getUsersStatus = (userId) => {\r\n    return async (dispatch) => {\r\n        const status = await profileApi.getStatus(userId);\r\n        dispatch(setStatus(status));\r\n    }\r\n};\r\n\r\nexport const changeStatus = (status) => {\r\n    return async (dispatch) => {\r\n        const data = await profileApi.updateStatus(status);\r\n        if (data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    };\r\n};\r\n\r\nexport const uploadProfileImage = (imageFile) => {\r\n    return async (dispatch) => {\r\n        const data = await profileApi.putProfilePhoto(imageFile);\r\n        if (data.resultCode === 0) {\r\n            dispatch(setProfileImage(data.data.photos.large))\r\n        }\r\n        console.log(data.messages);\r\n    }\r\n};\r\n\r\nexport default profileReducer;\r\n","const ADD_MESSAGE = 'social-network/dialogs/ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 0, Name: 'Masha'},\r\n        {id: 1, Name: 'Misha'},\r\n        {id: 2, Name: 'Sasha'},\r\n        {id: 3, Name: 'Pasha'},\r\n        {id: 4, Name: 'Dasha'},\r\n    ],\r\n\r\n    messages: [\r\n        {id: 0, text: 'buy'},\r\n        {id: 1, text: 'hello'},\r\n        {id: 2, text: 'hey'},\r\n        {id: 3, text: 'where are you'},\r\n        {id: 4, text: 'miss u'},\r\n    ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let message = {\r\n                id: state.messages.length,\r\n                // text: state.newMessageText,\r\n                text: action.newMessageText,\r\n            };\r\n            return  {\r\n                ...state,\r\n                messages: [...state.messages, message],\r\n            };\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport const addMessage = (newMessageText) => ({type: ADD_MESSAGE, newMessageText});\r\n\r\nexport default dialogsReducer;\r\n","import {authApi, securityApi} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'social-network/auth/SET_USER_DATA';\r\nconst TOGGLE_IS_CAPTCHA_REQUIRED = 'social-network/auth/TOGGLE_IS_CAPTCHA_REQUIRED';\r\nconst SET_CAPTCHA_URL = 'social-network/auth/SET_CAPTCHA_URL';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    isCaptchaRequired: false,\r\n    captchaUrl: null,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        case TOGGLE_IS_CAPTCHA_REQUIRED:\r\n            return {\r\n                ...state,\r\n                isCaptchaRequired: action.flag,\r\n            };\r\n        case SET_CAPTCHA_URL:\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.captchaUrl\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const authorizeUser = (userId, login, email, isAuth) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        payload: {userId, login, email, isAuth},\r\n    }\r\n};\r\nexport const toggleIsCaptchaRequired = (flag) => ({type: TOGGLE_IS_CAPTCHA_REQUIRED, flag});\r\nexport const setCaptchaUrl = (captchaUrl) => ({type: SET_CAPTCHA_URL, captchaUrl});\r\n\r\nexport const setAuthInfo = () => {\r\n    return async (dispatch) => {\r\n        const data = await authApi.getAuthData();\r\n        if (data.resultCode === 0) {\r\n            let {id, login, email} = data.data;\r\n            dispatch(authorizeUser(id, login, email, true));\r\n        }\r\n    }\r\n};\r\n\r\nexport const getCaptcha = () => {\r\n    return async (dispatch) => {\r\n        const data = await securityApi.getCaptcha();\r\n        dispatch(setCaptchaUrl(data.url));\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe, captcha) => {\r\n    return async (dispatch) => {\r\n        const data = await authApi.login(email, password, rememberMe, captcha);\r\n        dispatch(toggleIsCaptchaRequired(false));\r\n\r\n        if (data.resultCode === 0) {\r\n            dispatch(setAuthInfo());\r\n            dispatch(setCaptchaUrl(null));\r\n        } else {\r\n            if (data.resultCode === 10) {\r\n                dispatch(toggleIsCaptchaRequired(true));\r\n                dispatch(getCaptcha());\r\n            }\r\n            let message = data.messages.length > 0 ? data.messages[0] : 'Something wrong';\r\n            dispatch(stopSubmit('login', {_error: message}));\r\n        }\r\n    }\r\n};\r\n\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n        const data = await authApi.logout();\r\n        if (data.resultCode === 0) {\r\n            dispatch(authorizeUser(null, null, null, false));\r\n        }\r\n    }\r\n};\r\n\r\nexport default authReducer;\r\n","import {setAuthInfo} from \"./authReducer\";\r\n\r\nconst TOGGLE_IS_INITIALIZED = 'social-network/app/TOGGLE_IS_INITIALIZED';\r\n\r\nconst initialState = {\r\n    isInitialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case TOGGLE_IS_INITIALIZED :\r\n            return {\r\n                ...state,\r\n                isInitialized: action.flag,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const toggleIsInitialized = (flag) => ({type: TOGGLE_IS_INITIALIZED, flag});\r\n\r\nexport const initializeApp = () => {\r\n    return async (dispatch) => {\r\n        await dispatch(setAuthInfo());\r\n        dispatch(toggleIsInitialized(true));\r\n    }\r\n};\r\n\r\nexport default appReducer;\r\n","import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\r\nimport profileReducer from './profileReducer';\r\nimport dialogsReducer from './dialogsReducer';\r\nimport friendsReducer from './friendsReducer';\r\nimport authReducer from './authReducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    dialogPage: dialogsReducer,\r\n    profilePage: profileReducer,\r\n    friendsPage: friendsReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n/*let store = createStore(\r\n    reducers,\r\n    applyMiddleware(thunkMiddleware),\r\n);*/\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './NavBar.css'\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <div className='NavBar_padding'>\r\n            <nav >\r\n                <div><NavLink className='NavBar-NavLink' to='/profile'>Profile</NavLink></div>\r\n                <div><NavLink className='NavBar-NavLink' to='/dialogs'>Messages</NavLink></div>\r\n                {/*<div><NavLink className='NavBar-NavLink' to='/music'>Music</NavLink></div>*/}\r\n                <div><NavLink className='NavBar-NavLink' to='/friends'>Friends</NavLink></div>\r\n                <div><NavLink className='NavBar-NavLink' to='/news'>News</NavLink></div>\r\n                {/*<div><NavLink className='NavBar-NavLink' to='/settings'>Settings</NavLink></div>*/}\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport './News.css'\r\nimport {compose} from \"redux\";\r\nimport withAuthRedirect from \"../../hocs/withAuthRedirect\";\r\n\r\nconst News = () => {\r\n    return (\r\n        <div className='News_padding'>\r\n            <h1>Today is Masha's birthday!!!!!!</h1>\r\n            <img width='400px' src='https://i.pinimg.com/originals/d0/40/d3/d040d35c4329b603f887b7344af88c64.jpg'/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n)(News)\r\n","import React from 'react';\r\nimport './Message.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div>\r\n            {props.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react';\r\nimport './Dialog.css'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Dialog = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return (\r\n        <div >\r\n            <NavLink to={path} className='Dialog-NavLink'>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialog\r\n","import React from \"react\";\r\nimport './FormsControl.css'\r\n\r\nexport const FormControl = ({input, meta, ...props}) => {\r\n    let elementClassName = meta.touched && meta.error ? 'FormError-Input' : null;\r\n    return (\r\n        <div className='FormError'>\r\n            <props.element {...input} {...props}\r\n                           className={elementClassName}\r\n            />\r\n            {meta.touched && meta.error && <span className='FormError-Text'>{meta.error}</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const TextArea = (props) => {\r\n    return (\r\n        <FormControl {...props} element='textarea'/>\r\n    )\r\n};\r\n\r\nexport const Input = (props) => {\r\n    return (\r\n        <FormControl {...props} element='input'/>\r\n    )\r\n};\r\n","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => {\r\n    return (value) => {\r\n        if (value && value.length > maxLength) return `Max length is ${maxLength} symbols!`;\r\n        return undefined;\r\n    }\r\n}\r\n","import {Field, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../../common/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\r\nimport React from \"react\";\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} >\r\n            <Field\r\n                component={TextArea}\r\n                name={'newMessageText'}\r\n                placeholder={'Enter new message:'}\r\n                validate={[required, maxLength100]}\r\n            />\r\n            <div>\r\n                <button>add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'dialogAddMessageForm'\r\n})(AddMessageForm)\r\n","import React from 'react';\r\nimport './Dialogs.css'\r\nimport Message from './Message/Message';\r\nimport Dialog from './Dialog/Dialog';\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n    const dialogsElements = props.dialogPage.dialogs.map((dialog) => {\r\n        return (\r\n            <Dialog\r\n                id={dialog.id}\r\n                name={dialog.Name}\r\n                key={dialog.id}\r\n            />\r\n        );\r\n    });\r\n\r\n    const messagesElements = props.dialogPage.messages.map((message) => {\r\n        return <Message text={message.text} key={message.id}/>\r\n    });\r\n\r\n    const addMessage = (formData) => {\r\n        props.addMessage(formData.newMessageText);\r\n    }\r\n\r\n    return (\r\n        <div className='Dialogs_gridTemplate Dialogs_padding'>\r\n            <div >\r\n                {dialogsElements}\r\n            </div>\r\n            <div >\r\n                {messagesElements}\r\n                <AddMessageForm onSubmit={addMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs\r\n","import React from 'react';\r\nimport './Dialogs.css'\r\nimport {\r\n    addMessage,\r\n} from '../../Redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from \"redux\";\r\nimport withAuthRedirect from \"../../hocs/withAuthRedirect\";\r\n\r\nclass DialogsContainer extends React.Component {\r\n    render() {\r\n        return <Dialogs {...this.props}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogPage: state.dialogPage,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {\r\n        addMessage,\r\n    }),\r\n)(DialogsContainer)\r\n","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    const saveStatus = () => {\r\n        props.changeStatus(status);\r\n        setEditMode(false);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    return (\r\n        <>\r\n            {editMode && (\r\n                <div>\r\n                    <input\r\n                        type='text'\r\n                        value={status}\r\n                        onChange={onStatusChange}\r\n                        onBlur={saveStatus}\r\n                        autoFocus\r\n                    />\r\n                </div>\r\n            )}\r\n            {!editMode && (\r\n                <div onDoubleClick={() => setEditMode(true)}>\r\n                    <span>{props.status || 'How are you doing?'}</span>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\n\r\nconst AboutMe = (props) => {\r\n    return (\r\n        <div>\r\n            <div>{props.fullName}</div>\r\n            <hr />\r\n            <div>{props.aboutMe}</div>\r\n            <div>\r\n                Looking for a job: {props.lookingForAJob ? 'yes' : 'no'}\r\n            </div>\r\n            <div>{props.lookingForAJobDescription}</div>\r\n            <div>\r\n                {Object.keys(props.contacts).map((name, id) => {\r\n                    return (\r\n                        <Contact key={id} contactName={name} contactValue={props.contacts[name]}/>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst Contact = (props) => {\r\n    return (\r\n        <div>\r\n            {props.contactName}: {props.contactValue}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AboutMe;\r\n","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input, TextArea} from \"../../../common/FormsControls\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst AboutMeChangingForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field\r\n                component={Input}\r\n                name='fullName'\r\n                placeholder='Full Name:'\r\n            />\r\n            <Field\r\n                component={TextArea}\r\n                name='aboutMe'\r\n                placeholder='Tell something about yourself:'\r\n            />\r\n            <label>\r\n                Are you looking for a job?\r\n            <Field\r\n                component={Input}\r\n                name='lookingForAJob'\r\n                type='checkbox'\r\n            />\r\n            </label>\r\n            <Field\r\n                component={Input}\r\n                name='lookingForAJobDescription'\r\n                placeholder='Why are you looking for a job?:'\r\n            />\r\n            <b>Contacts</b>\r\n            <div>\r\n                {Object.keys(props.initialValues.contacts).map((name, id) => {\r\n                    return (\r\n                        <Contact key={id} contactName={name}/>\r\n                    )\r\n                })}\r\n            </div>\r\n            <button>save</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst Contact = (props) => {\r\n    return (\r\n        <>\r\n            {props.contactName}:\r\n            <Field\r\n                component={Input}\r\n                name={`contacts.${props.contactName}`}\r\n            />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default compose(\r\n    connect(state => ({\r\n        initialValues: state.profilePage\r\n    }), {}),\r\n    reduxForm({form: 'aboutMeChanging'}),\r\n)(AboutMeChangingForm);\r\n","import React, {useState} from 'react';\r\nimport './ProfileInfo.css'\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\r\nimport defaultUserIcon from '../../../res/userIcon.png';\r\nimport AboutMe from \"./AboutMe/AboutMe\";\r\nimport AboutMeChangingForm from \"./AboutMeChangingForm/AboutMeChangingForm\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const onFileSubmit = (event) => {\r\n        if (event.target.files.length) {\r\n            props.uploadProfileImage(event.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const onAboutMeFormSubmit = (formData) => {\r\n        props.changeProfileInfo(formData);\r\n        setEditMode(false);\r\n    }\r\n\r\n    return (\r\n        <div className='ProfileInfo-Wrapper'>\r\n            <div>\r\n                <div>\r\n                    <img className='ProfileInfo-Image'\r\n                         src={props.profileImage || defaultUserIcon}/>\r\n                </div>\r\n                {props.isOwner && (\r\n                    // <UploadOutlined onChange={onFileSubmit}/> //TODO разобраться с upload\r\n                    <input className='FileInput' type='file' onChange={onFileSubmit}/>\r\n                )}\r\n                <div>Status:</div>\r\n                {props.isOwner && (\r\n                    <ProfileStatusWithHooks\r\n                        status={props.status}\r\n                        changeStatus={props.changeStatus}\r\n                    />\r\n                )}\r\n                {!props.isOwner && (\r\n                    <div>props.status</div>\r\n                )}\r\n            </div>\r\n            <div>\r\n                {!editMode && (\r\n                    <div>\r\n                        <AboutMe\r\n                            fullName={props.fullName}\r\n                            aboutMe={props.aboutMe}\r\n                            contacts={props.contacts}\r\n                            lookingForAJob={props.lookingForAJob}\r\n                            lookingForAJobDescription={props.lookingForAJobDescription}\r\n                        />\r\n                        {props.isOwner && (\r\n                            <button onClick={() => setEditMode(true)}>Change information about you </button>\r\n                        )}\r\n                    </div>\r\n                )}\r\n                {editMode && (\r\n                    <AboutMeChangingForm\r\n                        onSubmit={onAboutMeFormSubmit}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo\r\n","import React from 'react';\r\nimport './Post.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className='post'>\r\n            <img src='https://yt3.ggpht.com/a/AGF-l78D8sRdVCMJf7gg7Is2apd6wxydsVsoRJ6zPQ=s900-c-k-c0xffffffff-no-rj-mo'/>\r\n            {props.message}\r\n            <div>\r\n                {props.likeCount} likes\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post\r\n","import {maxLengthCreator, required} from \"../../../../utils/validators\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../../../common/FormsControls\";\r\nimport React from \"react\";\r\n\r\nconst maxLength200 = maxLengthCreator(200);\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    name='newPostText'\r\n                    component={TextArea}\r\n                    placeholder='Enter new post text'\r\n                    validate={[required, maxLength200]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'profileAddPostForm',\r\n})(AddPostForm)\r\n","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport './MyPosts.css'\r\nimport AddPostForm from \"./AddPostForm/AddPostForm\";\r\n\r\n\r\nconst MyPosts = (props) => {\r\n    let postElements = props.posts.map((post) => {\r\n        return <Post\r\n            message={post.message}\r\n            likeCount={post.likeCount}\r\n            key={post.id}\r\n        />\r\n    });\r\n\r\n    let addPost = (formData) => {\r\n        props.addPost(formData.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className='my-posts__new-post'>\r\n                <AddPostForm onSubmit={addPost}/>\r\n            </div>\r\n            <div className='my-posts__post-list'>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport './MyPosts.css'\r\nimport {addPost} from '../../../Redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {\r\n    addPost,\r\n})(MyPosts);\r\n\r\nexport default MyPostsContainer\r\n","import React from 'react';\r\nimport './Profile.css'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className='Profile_padding'>\r\n            <ProfileInfo {...props} />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import * as React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    addPost,\r\n    changeProfileInfo,\r\n    changeStatus,\r\n    getUsersProfile,\r\n    getUsersStatus,\r\n    uploadProfileImage\r\n} from \"../../Redux/profileReducer\";\r\nimport {toggleIsFetching} from \"../../Redux/friendsReducer\";\r\nimport Preloader from \"../common/Preloader\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    //TODO toggle isFetching вынести в отдельный редюсер\r\n    //TODO все перекинуть в hooks либо деструктуризировать пропсы\r\n    componentDidMount() {\r\n        // this.props.toggleIsFetching();\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId\r\n        || (!this.props.match.params.userId && this.props.authorizedUserId !== prevProps.authorizedUserId)) {\r\n           this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId || this.props.authorizedUserId;\r\n        if (!userId) {\r\n            this.props.history.push('/login'); //TODO remove deprecated code\r\n        }\r\n        this.props.getUsersProfile(userId);\r\n        this.props.getUsersStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        const isOwner = !this.props.match.params.userId\r\n            || this.props.match.params.userId === this.props.authorizedUserId;\r\n        return (\r\n            <>\r\n                {/*{this.props.isFetching && <Preloader />}*/}\r\n                <Profile {...this.props} isOwner={isOwner}/>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth,\r\n        ...state.profilePage,\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {\r\n        addPost,\r\n        toggleIsFetching,\r\n        getUsersProfile,\r\n        getUsersStatus,\r\n        changeStatus,\r\n        uploadProfileImage,\r\n        changeProfileInfo,\r\n    }),\r\n)(ProfileContainer)\r\n","import React from 'react'\r\nimport './Header.css'\r\nimport {NavLink} from 'react-router-dom';\r\nimport logo from '../../res/logo.png'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className='Header'>\r\n            <img className='SiteLogo' src={logo}/>\r\n            <div className='LoginBlock'>\r\n                {props.isAuth && ( //TODO сделать красиво\r\n                    <div>\r\n                        {props.login}\r\n                        <br />\r\n                        <button onClick={props.logout}>Logout</button>\r\n                    </div>\r\n                )}\r\n                {!props.isAuth && <NavLink to='/login'>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import Header from './Header';\r\nimport React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {logout} from '../../Redux/authReducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    logout,\r\n})(HeaderContainer);\r\n","import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Input} from \"../../common/FormsControls\";\r\nimport {required} from \"../../../utils/validators\";\r\nimport '../../common/FormsControl.css'\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    placeholder={'Login'}\r\n                    name={'login'}\r\n                    type='text'\r\n                    component={Input}\r\n                    validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    placeholder={'Password'}\r\n                    name={'password'}\r\n                    type='password'\r\n                    component={Input}\r\n                    validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    name={'rememberMe'}\r\n                    type='checkbox'\r\n                    component={Input}\r\n                />\r\n                remember me\r\n            </div>\r\n            {props.error && (\r\n                <div className=\"FormError_summary\">\r\n                    Incorrect login or password\r\n                </div>\r\n            )}\r\n            {props.isCaptchaRequired && <img src={props.captchaUrl}/>}\r\n            {props.isCaptchaRequired && (\r\n                <div>\r\n                    <Field\r\n                        name={'captcha'}\r\n                        placeholder={'captcha'}\r\n                        type='text'\r\n                        validate={[required]}\r\n                        component={Input}\r\n                    />\r\n                </div>\r\n            )}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default reduxForm({form: 'login'})(LoginForm);\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../Redux/authReducer\";\r\nimport LoginForm from \"./LoginForm/LoginForm\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport './Login.css'\r\n\r\nclass Login extends React.Component {\r\n    render() {\r\n        const onSubmit = (formData) => {\r\n            this.props.login(formData.login, formData.password, formData.rememberMe, formData.captcha);\r\n        };\r\n\r\n        if (this.props.isAuth) return <Redirect to='/profile'/>;\r\n\r\n        return (\r\n            <div className='Login_padding'>\r\n                <h1>Login</h1>\r\n                <LoginForm\r\n                    onSubmit={onSubmit}\r\n                    isCaptchaRequired={this.props.isCaptchaRequired}\r\n                    captchaUrl={this.props.captchaUrl}\r\n                />\r\n                <p>If you don't have an account, use test login and password.</p>\r\n                <p>Login: free@samuraijs.com</p>\r\n                <p>Password: free</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        isCaptchaRequired: state.auth.isCaptchaRequired,\r\n        captchaUrl: state.auth.captchaUrl,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    login\r\n})(Login) //TODO сделать контейнер\r\n","import {Provider} from \"react-redux\";\r\nimport store from \"../Redux/reduxStore\";\r\nimport React from \"react\";\r\n\r\nconst withStoreProvider = (Component) => {\r\n    const withStoreProviderComponent = (props) => {\r\n        return (\r\n            <Provider store={store}>\r\n                <Component {...props} />\r\n            </Provider>\r\n        )\r\n    };\r\n\r\n    withStoreProviderComponent.displayName = `withStoreProvider(${Component.displayName\r\n    || Component.name\r\n    || 'Component'})`;\r\n\r\n    return withStoreProviderComponent;\r\n};\r\n\r\nexport default withStoreProvider;\r\n","import React, {Suspense} from \"react\";\r\nimport Preloader from \"../components/common/Preloader\";\r\n\r\nconst withSuspense = (Component) => {\r\n    const withSuspenseComponent = (props) => {\r\n        return (\r\n            <Suspense fallback={<Preloader />}>\r\n                <Component {...props} />\r\n            </Suspense>\r\n        );\r\n    };\r\n\r\n    withSuspenseComponent.displayName = `withSuspense(${Component.displayName\r\n    || Component.Name\r\n    || 'Component'})`;\r\n\r\n    return withSuspenseComponent;\r\n};\r\n\r\nexport default withSuspense;\r\n","import React from \"react\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nconst withHashRouter = (Component) => {\r\n    const withHashRouterComponent = (props) => {\r\n        return (\r\n            <HashRouter>\r\n                <Component {...props} />\r\n            </HashRouter>\r\n        );\r\n    };\r\n\r\n    withHashRouterComponent.displayName = `withHashRouter(${Component.displayName\r\n    || Component.name\r\n    || 'Component'})`;\r\n\r\n    return withHashRouterComponent;\r\n};\r\n\r\nexport default withHashRouter;\r\n","import React, {lazy} from 'react';\r\nimport './App.css';\r\nimport NavBar from './components/NavBar/NavBar';\r\nimport {Redirect, Route, withRouter} from 'react-router-dom';\r\nimport Music from './components/Music/Music';\r\nimport News from './components/News/News';\r\nimport Settings from './components/Settings/Settings';\r\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./Redux/appReducer\";\r\nimport Preloader from \"./components/common/Preloader\";\r\nimport withBrowserRouter from \"./hocs/withBrowserRouter\";\r\nimport withStoreProvider from \"./hocs/withStoreProvider\";\r\nimport withSuspense from \"./hocs/withSuspense\";\r\nimport withHashRouter from \"./hocs/withHashRouter\";\r\nimport {Switch} from \"react-router\";\r\n\r\nconst FriendsContainer = React.lazy(() => import(\"./components/Friends/FriendsContainer\"));\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.isInitialized) {\r\n            return <Preloader/>\r\n        }\r\n        // TODO content component\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <div className='app-wrapper__header'><HeaderContainer/></div>\r\n                <div className='app-wrapper__nav'><NavBar/></div>\r\n                <div className='app-wrapper__content'>\r\n                    <Switch>\r\n                        <Redirect exact from=\"/\" to=\"/profile\" />\r\n                        <Route path='/dialogs' render={() => <DialogsContainer/>}/>\r\n                        <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\r\n                        <Route path='/news' render={() => <News/>}/>\r\n                        {/*<Route path='/music' render={() => <Music/>}/>*/}\r\n                        <Route path='/friends' render={() => withSuspense(FriendsContainer)()}/>\r\n                        {/*<Route path='/settings' render={() => <Settings/>}/>*/}\r\n                        <Route path='/login' render={() => <Login/>}/>\r\n                        <Route path='*' render={() => <h1>404: Page not found</h1>} />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isInitialized: state.app.isInitialized,\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    withHashRouter,\r\n    withStoreProvider,\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}),\r\n)(App);\r\n","import React from 'react';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from \"./Redux/reduxStore\"\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n","import preloader from \"../../res/preloader.svg\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n        <div>\r\n            <img className='preloader' src={preloader} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst withAuthRedirect = (Component) => {\r\n    class withAuthRedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>;\r\n        }\r\n    }\r\n\r\n    withAuthRedirectComponent.displayName = `withAuthRedirect(${Component.displayName\r\n    || Component.name\r\n    || 'Component'})`;\r\n\r\n    const mapStateToProps = (state) => {\r\n        return {\r\n            isAuth: state.auth.isAuth,\r\n        }\r\n    }\r\n    return connect(mapStateToProps, {})(withAuthRedirectComponent);\r\n}\r\n\r\nexport default withAuthRedirect;\r\n","export const updateObjectInArray = (objArray, objKeyName, objKeyValue, newObjProps) => {\r\n    return objArray.map(obj => {\r\n        if(obj[objKeyName] === objKeyValue) {\r\n            return {...obj, ...newObjProps}\r\n        }\r\n        return obj;\r\n    })\r\n};\r\n","import {usersApi} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/updateObjectInArray\";\r\n\r\nconst SET_FRIENDS = 'social-network/friends/SET_FRIENDS';\r\nconst TOGGLE_FOLLOWED = 'social-network/friends/TOGGLE_FOLLOWED';\r\nconst SET_CURRENT_PAGE = 'social-network/friends/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'social-network/friends/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'social-network/friends/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_IN_PROGRESS = 'social-network/friends/TOGGLE_IS_FOLLOWING_IN_PROGRESS';\r\n\r\nlet initialState = {\r\n    friends: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 20,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    isFollowingInProgress: false,\r\n};\r\n\r\nconst friendsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_FRIENDS:\r\n            return {\r\n                ...state,\r\n                friends: [...action.friends],\r\n            };\r\n        case TOGGLE_FOLLOWED:\r\n            return {\r\n                ...state,\r\n                friends: updateObjectInArray(\r\n                    state.friends,\r\n                    'id',\r\n                    action.friendId,\r\n                    {followed: action.flag,}\r\n                    ),\r\n            };\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.pageNumber,\r\n            };\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount,\r\n            };\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.flag,\r\n            };\r\n        case TOGGLE_IS_FOLLOWING_IN_PROGRESS:\r\n            return {\r\n                ...state,\r\n                isFollowingInProgress: action.flag,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setFriends = (friends) => ({type: SET_FRIENDS, friends,});\r\nexport const toggleFollowed = (friendId, flag) => ({type: TOGGLE_FOLLOWED, friendId, flag});\r\nexport const setCurrentPage = (pageNumber) => ({type: SET_CURRENT_PAGE, pageNumber,});\r\nexport const setTotalUsersCount = (totalCount) => ({type: SET_TOTAL_USERS_COUNT, totalCount,});\r\nexport const toggleIsFetching = (flag) => ({type: TOGGLE_IS_FETCHING, flag});\r\nexport const toggleIsFollowingInProgress = (flag) => ({type: TOGGLE_IS_FOLLOWING_IN_PROGRESS, flag});\r\n\r\nexport const getFriends = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        const data = await usersApi.getUsers(currentPage, pageSize);\r\n\r\n        dispatch(setFriends(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n        dispatch(toggleIsFetching(false));\r\n    }\r\n};\r\n\r\nexport const toggleFollowingFriend = (friendId, flag) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFollowingInProgress(true));\r\n\r\n        const asyncFunction = flag ? usersApi.follow : usersApi.unfollow;\r\n        const data = await asyncFunction(friendId);\r\n\r\n        if (data.resultCode === 0) {\r\n            dispatch(toggleFollowed(friendId, flag));\r\n        }\r\n        dispatch(toggleIsFollowingInProgress(false));\r\n    }\r\n};\r\n\r\nexport default friendsReducer\r\n","module.exports = __webpack_public_path__ + \"static/media/userIcon.d988dee4.png\";"],"sourceRoot":""}