{"version":3,"sources":["components/Friends/Friend/Friend.jsx","components/Friends/Friends.jsx","Redux/friendsSelectors.js","components/Friends/FriendsContainer.jsx"],"names":["Friend","props","className","to","id","width","src","photos","small","defaultUserIcon","name","status","disabled","isFollowingInProgress","onClick","toggleFollowingFriend","followed","Friends","onChange","onPageChanged","current","currentPage","defaultPageSize","pageSize","total","totalUsersCount","showSizeChanger","showQuickJumper","friends","map","friend","key","getFriendsSup","createSelector","state","friendsPage","filter","f","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getIsFollowingInProgress","FriendsContainer","newPage","setCurrentPage","getFriends","this","length","Preloader","React","Component","compose","withAuthRedirect","connect","getFriendsArray","isAuth","auth","toggleFollowed","toggleIsFollowingInProgress"],"mappings":"2RA4BeA,G,OAvBA,SAACC,GACZ,OACI,oCACI,yBAAKC,UAAU,gCACX,kBAAC,IAAD,CAASA,UAAU,QAAQC,GAAE,mBAAcF,EAAMG,KAC7C,yBAAKC,MAAM,OAAOC,IAAKL,EAAMM,OAAOC,OAASC,QAGrD,yBAAKP,UAAU,gCACX,6BAAMD,EAAMS,MACZ,6BAAMT,EAAMU,SAEhB,6BACI,4BAAQC,SAAUX,EAAMY,sBAAuBC,QAAS,WACpDb,EAAMc,sBAAsBd,EAAMG,IAAKH,EAAMe,YAE5Cf,EAAMe,SAAW,WAAa,cCepCC,EA3BC,SAAChB,GACb,OACI,6BAEI,yBAAKC,UAAU,mBACX,kBAAC,IAAD,CACIA,UAAU,kBACVgB,SAAUjB,EAAMkB,cAChBC,QAASnB,EAAMoB,YACfC,gBAAiBrB,EAAMsB,SACvBC,MAAOvB,EAAMwB,gBACbC,iBAAiB,EACjBC,iBAAe,KAGvB,yBAAKzB,UAAU,mBACVD,EAAM2B,QAAQC,KAAI,SAACC,GAChB,OACI,kBAAC,EAAD,eAAQC,IAAKD,EAAO1B,GAAIF,UAAU,mBAAsB4B,EAAxD,CACQf,sBAAuBd,EAAMc,+B,wCCxBhDiB,EAAgBC,aAFH,SAACC,GAAD,OAAWA,EAAMC,YAAYP,WAEC,SAACA,GACrD,OAAOA,EAAQQ,QAAO,SAAAC,GAAC,OAAI,QAElBC,EAAc,SAACJ,GAAD,OAAWA,EAAMC,YAAYZ,UAC3CgB,EAAqB,SAACL,GAAD,OAAWA,EAAMC,YAAYV,iBAClDe,EAAiB,SAACN,GAAD,OAAWA,EAAMC,YAAYd,aAC9CoB,EAAgB,SAACP,GAAD,OAAWA,EAAMC,YAAYO,YAC7CC,EAA2B,SAACT,GAAD,OAAWA,EAAMC,YAAYtB,uBCS/D+B,E,4MAOFzB,cAAgB,SAAC0B,GACb,EAAK5C,MAAM6C,eAAeD,GAC1B,EAAK5C,MAAM8C,WAAWF,EAAS,EAAK5C,MAAMsB,W,kEAPR,IAA9ByB,KAAK/C,MAAM2B,QAAQqB,QACnBD,KAAK/C,MAAM8C,WAAWC,KAAK/C,MAAMoB,YAAa2B,KAAK/C,MAAMsB,Y,+BAU7D,OAAO,oCACFyB,KAAK/C,MAAMyC,YAAc,kBAACQ,EAAA,EAAD,MAC1B,kBAAC,EAAD,CAAStB,QAASoB,KAAK/C,MAAM2B,QACpBH,gBAAiBuB,KAAK/C,MAAMwB,gBAC5BF,SAAUyB,KAAK/C,MAAMsB,SACrBF,YAAa2B,KAAK/C,MAAMoB,YACxBF,cAAe6B,KAAK7B,cACpB2B,eAAgBE,KAAK/C,MAAM6C,eAC3BjC,sBAAuBmC,KAAK/C,MAAMY,sBAClCE,sBAAuBiC,KAAK/C,MAAMc,6B,GAtBxBoC,IAAMC,WAuCtBC,sBACXC,IACAC,aAdkB,SAACrB,GACnB,MAAO,CACHN,QAAS4B,EAAgBtB,GACzBX,SAAUe,EAAYJ,GACtBT,gBAAiBc,EAAmBL,GACpCb,YAAamB,EAAeN,GAC5BQ,WAAYD,EAAcP,GAC1BrB,sBAAuB8B,EAAyBT,GAChDuB,OAAQvB,EAAMwB,KAAKD,UAME,CACrBE,mBACAb,mBACAc,gCACAb,eACAhC,4BAPOsC,CASbT","file":"static/js/4.a0b13ed9.chunk.js","sourcesContent":["import React from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport defaultUserIcon from '../../../res/userIcon.png';\nimport './Friend.css'\n\nconst Friend = (props) => {\n    return (\n        <>\n            <div className='Friend_inline Friend_padding'>\n                <NavLink className='image' to={`/profile/${props.id}`}>\n                    <img width='40px' src={props.photos.small || defaultUserIcon}/>\n                </NavLink>\n            </div>\n            <div className='Friend_inline Friend_padding'>\n                <div>{props.name}</div>\n                <div>{props.status}</div>\n            </div>\n            <div>\n                <button disabled={props.isFollowingInProgress} onClick={() => {\n                    props.toggleFollowingFriend(props.id, !props.followed);\n                }}>\n                    {props.followed ? 'Unfollow' : 'Follow'}\n                </button>\n            </div>\n        </>\n    )\n}\n\nexport default Friend;\n","import React from 'react';\nimport './Friends.css'\nimport defaultUserIcon from \"../../res/userIcon.png\"\nimport {NavLink} from \"react-router-dom\";\nimport Paginator from \"./Paginator/Paginator\";\nimport {Pagination} from \"antd\";\nimport 'antd/dist/antd.css';\nimport Friend from \"./Friend/Friend\";\n\nconst Friends = (props) => {\n    return (\n        <div>\n            {/*<Paginator {...props}/>*/}\n            <div className='Friends_padding'>\n                <Pagination\n                    className='Friends_padding'\n                    onChange={props.onPageChanged}\n                    current={props.currentPage}\n                    defaultPageSize={props.pageSize}\n                    total={props.totalUsersCount}\n                    showSizeChanger={false} //TODO исправить чтоб работало\n                    showQuickJumper\n                />\n            </div>\n            <div className='Friends_padding'>\n                {props.friends.map((friend) => {\n                    return (\n                        <Friend key={friend.id} className='Friends_padding' {...friend}\n                                toggleFollowingFriend={props.toggleFollowingFriend}/>\n                    )\n                })}\n            </div>\n        </div>\n    )\n};\n\nexport default Friends\n","import {createSelector} from \"reselect\";\n\nexport const getFriends = (state) => state.friendsPage.friends;\n//пример работы create selector\nexport const getFriendsSup = createSelector(getFriends, (friends) => {\n    return friends.filter(f => true);\n});\nexport const getPageSize = (state) => state.friendsPage.pageSize;\nexport const getTotalUsersCount = (state) => state.friendsPage.totalUsersCount;\nexport const getCurrentPage = (state) => state.friendsPage.currentPage;\nexport const getIsFetching = (state) => state.friendsPage.isFetching;\nexport const getIsFollowingInProgress = (state) => state.friendsPage.isFollowingInProgress;\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport Friends from './Friends';\nimport {\n    getFriends,\n    setCurrentPage,\n    toggleFollowed, toggleFollowingFriend, toggleIsFollowingInProgress,\n} from '../../Redux/friendsReducer';\nimport Preloader from \"../common/Preloader\";\nimport withAuthRedirect from \"../../hocs/withAuthRedirect\";\nimport {compose} from \"redux\";\nimport {\n    getFriendsSup as getFriendsArray,\n    getCurrentPage,\n    getIsFetching,\n    getIsFollowingInProgress,\n    getPageSize,\n    getTotalUsersCount\n} from \"../../Redux/friendsSelectors\";\n\nclass FriendsContainer extends React.Component {\n    componentDidMount() {\n        if (this.props.friends.length === 0) {\n            this.props.getFriends(this.props.currentPage, this.props.pageSize);\n        }\n    }\n\n    onPageChanged = (newPage) => {\n        this.props.setCurrentPage(newPage);\n        this.props.getFriends(newPage, this.props.pageSize);\n    };\n\n    render() {\n        return <>\n            {this.props.isFetching && <Preloader/>}\n            <Friends friends={this.props.friends}\n                     totalUsersCount={this.props.totalUsersCount}\n                     pageSize={this.props.pageSize}\n                     currentPage={this.props.currentPage}\n                     onPageChanged={this.onPageChanged}\n                     setCurrentPage={this.props.setCurrentPage}\n                     isFollowingInProgress={this.props.isFollowingInProgress}\n                     toggleFollowingFriend={this.props.toggleFollowingFriend}/>\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        friends: getFriendsArray(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        isFollowingInProgress: getIsFollowingInProgress(state),\n        isAuth: state.auth.isAuth,\n    }\n};\n\nexport default compose(\n    withAuthRedirect,\n    connect(mapStateToProps, {\n        toggleFollowed,\n        setCurrentPage,\n        toggleIsFollowingInProgress,\n        getFriends,\n        toggleFollowingFriend,\n    }),\n)(FriendsContainer);\n\n\n\n"],"sourceRoot":""}