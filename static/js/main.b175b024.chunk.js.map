{"version":3,"sources":["res/preloader.svg","res/logo.png","api/api.js","serviceWorker.js","Redux/profileReducer.js","Redux/dialogsReducer.js","Redux/authReducer.js","Redux/appReducer.js","Redux/reduxStore.js","components/NavBar/NavBar.jsx","components/News/News.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialog/Dialog.jsx","components/common/FormsControls.jsx","utils/validators/index.js","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/AboutMe/AboutMe.jsx","components/Profile/ProfileInfo/AboutMeChangingForm/AboutMeChangingForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddPostForm/AddPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/LoginForm/LoginForm.jsx","components/Login/Login.jsx","hocs/withStoreProvider.js","hocs/withSuspense.js","hocs/withHashRouter.js","App.js","index.js","components/common/Preloader.jsx","hocs/withAuthRedirect.js","utils/updateObjectInArray.js","Redux/friendsReducer.js","res/userIcon.png"],"names":["module","exports","axiosInstance","axios","withCredentials","baseURL","headers","profileApi","getUsersProfile","userId","get","response","data","setUsersProfile","profileInfo","aboutMe","fullName","lookingForAJob","lookingForAJobDescription","contacts","put","getStatus","updateStatus","status","putProfilePhoto","image","formData","FormData","append","usersApi","getUsers","currentPage","pageSize","follow","friendId","post","unfollow","delete","authApi","getAuthData","login","email","password","rememberMe","captcha","logout","securityApi","getCaptcha","Boolean","window","location","hostname","match","ADD_POST","DELETE_POST","SET_PROFILE_INFO","TOGGLE_IS_FETCHING","SET_STATUS","SET_PROFILE_IMAGE","initialState","profileImage","posts","isFetching","addPost","newPostText","type","setProfileInfo","profileData","setProfileImage","imageUrl","setStatus","profileReducer","state","action","id","length","message","likeCount","filter","p","postId","ADD_MESSAGE","dialogs","Name","messages","text","dialogsReducer","newMessageText","SET_USER_DATA","SET_CAPTCHA_URL","isAuth","isCaptchaRequired","captchaUrl","authorizeUser","payload","toggleIsCaptchaRequired","flag","setCaptchaUrl","setAuthInfo","dispatch","a","resultCode","authReducer","isInitialized","appReducer","reducers","combineReducers","dialogPage","profilePage","friendsPage","friendsReducer","auth","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","NavBar","className","to","withAuthRedirect","width","src","Message","props","Dialog","path","name","FormControl","input","meta","elementClassName","touched","error","element","TextArea","Input","required","value","maxLengthCreator","maxLength","maxLength100","reduxForm","onSubmit","handleSubmit","Field","component","placeholder","validate","Dialogs","dialogsElements","map","dialog","key","messagesElements","addMessage","DialogsContainer","this","React","Component","connect","ProfileStatusWithHooks","useState","editMode","setEditMode","useEffect","onChange","e","currentTarget","onBlur","changeStatus","autoFocus","onDoubleClick","Contact","contactName","contactValue","AboutMe","Object","keys","initialValues","ProfileInfo","defaultUserIcon","isOwner","event","target","files","uploadProfileImage","onClick","changeProfileInfo","style","border","scrolling","frameBorder","marginHeight","marginWidth","height","allowFullScreen","Post","alt","maxLength200","MyPosts","postElements","MyPostsContainer","Profile","ProfileContainer","refreshProfile","prevProps","prevState","snapshot","params","authorizedUserId","history","push","getUsersStatus","withRouter","toggleIsFetching","photos","large","imageFile","console","log","Header","logo","HeaderContainer","Login","url","stopSubmit","_error","withStoreProvider","withStoreProviderComponent","displayName","withSuspense","withSuspenseComponent","fallback","Preloader","withHashRouter","withHashRouterComponent","FriendsContainer","lazy","App","initializeApp","exact","from","render","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","preloader","withAuthRedirectComponent","updateObjectInArray","objArray","objKeyName","objKeyValue","newObjProps","obj","SET_FRIENDS","TOGGLE_FOLLOWED","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","friends","totalUsersCount","isFollowingInProgress","toggleFollowed","setCurrentPage","pageNumber","toggleIsFollowingInProgress","getFriends","items","totalCount","toggleFollowingFriend","asyncFunction","followed"],"mappings":"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","file":"static/js/main.b175b024.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/preloader.4f318f35.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.52694f72.png\";","import * as axios from \"axios\";\n\nconst axiosInstance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        'API-KEY': '4c7b227d-d83d-45ab-9f12-6ba2c0dc507f',\n    },\n});\n\nexport const profileApi = {\n    async getUsersProfile(userId) {\n        const response = await axiosInstance.get(`profile/${userId}`);\n        return response.data;\n    },\n    async setUsersProfile(profileInfo) {\n        const {aboutMe, fullName, lookingForAJob, lookingForAJobDescription, contacts} = profileInfo;\n        const response = await axiosInstance.put(`profile`, {\n            aboutMe,\n            fullName,\n            lookingForAJob,\n            lookingForAJobDescription,\n            contacts,\n        });\n        return response.data;\n    },\n    async getStatus(userId) {\n        const response = await axiosInstance.get(`profile/status/${userId}`);\n        return response.data;\n    },\n    async updateStatus(status) {\n        const response = await axiosInstance.put('profile/status', {status: status});\n        return response.data;\n    },\n    async putProfilePhoto(image) {\n        const formData = new FormData();\n        formData.append('image', image);\n\n        const response = await axiosInstance.put('profile/photo', formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        });\n        return response.data;\n    }\n};\n\nexport const usersApi = {\n    async getUsers(currentPage = 1, pageSize = 10) {\n        const response = await axiosInstance.get(`users?page=${currentPage}&count=${pageSize}`);\n        return response.data;\n    },\n\n    async follow(friendId) {\n        const response = await axiosInstance.post(`follow/${friendId}`);\n        return response.data;\n    },\n\n    async unfollow(friendId) {\n        const response = await axiosInstance.delete(`follow/${friendId}`);\n        return response.data;\n    },\n};\n\nexport const authApi = {\n    async getAuthData() {\n        const response = await axiosInstance.get('auth/me');\n        return response.data;\n    },\n    async login(email, password, rememberMe, captcha) {\n        const response = await axiosInstance.post('auth/login', {\n            email,\n            password,\n            rememberMe,\n            captcha,\n        });\n        return response.data;\n    },\n    async logout() {\n        const response = await axiosInstance.delete('auth/login');\n        return response.data;\n    },\n};\n\nexport const securityApi = {\n    async getCaptcha() {\n        const response = await axiosInstance.get('security/get-captcha-url');\n        return response.data;\n    },\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {profileApi} from \"../api/api\";\n\nconst ADD_POST = 'social-network/profile/ADD-POST';\nconst DELETE_POST = 'social-network/profile/DELETE_POST';\nconst SET_PROFILE_INFO = 'social-network/profile/SET_PROFILE_INFO';\nconst TOGGLE_IS_FETCHING = 'social-network/profile/TOGGLE_IS_FETCHING';\nconst SET_STATUS = 'social-network/profile/SET_STATUS';\nconst SET_PROFILE_IMAGE = 'social-network/profile/SET_PROFILE_IMAGE';\n\nlet initialState = {\n    fullName: '',\n    profileImage: '', //TODO возможно заменить на photos\n    aboutMe: '',\n    posts: [],\n    status: '',\n    lookingForAJob: false,\n    lookingForAJobDescription: '',\n    contacts: {},\n    isFetching: false,\n};\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST:\n            let post = {\n                id: state.posts.length,\n                message: action.newPostText,\n                likeCount: 2,\n            };\n            return {\n                ...state,\n                posts: [...state.posts, post],\n            };\n        case DELETE_POST:\n            return {\n                ...state,\n                posts: state.posts.filter((p) => p.id !== action.postId),\n            };\n        case SET_PROFILE_INFO:\n            return {\n                ...state,\n                fullName: action.fullName,\n                aboutMe: action.aboutMe,\n                contacts: action.contacts,\n                lookingForAJob: action.lookingForAJob,\n                lookingForAJobDescription: action.lookingForAJobDescription,\n            };\n        case SET_PROFILE_IMAGE:\n            return {\n                ...state,\n                profileImage: action.imageUrl,\n            };\n        case TOGGLE_IS_FETCHING:\n            return {\n                ...state,\n                isFetching: !state.isFetching,\n            };\n        case SET_STATUS:\n            return {\n                ...state,\n                status: action.status,\n            };\n        default:\n            return state;\n    }\n};\n\nexport const addPost = (newPostText) => ({type: ADD_POST, newPostText});\nexport const deletePost = (postId) => ({type: ADD_POST, postId});\nexport const setProfileInfo = (profileData) => ({type: SET_PROFILE_INFO, ...profileData,});\nexport const setProfileImage = (imageUrl) => ({type: SET_PROFILE_IMAGE, imageUrl,});\nexport const toggleIsFetching = () => ({type: TOGGLE_IS_FETCHING,});\nexport const setStatus = (status) => ({type: SET_STATUS, status,});\n\nexport const getUsersProfile = (userId) => {\n    return async (dispatch) => {\n        const data = await profileApi.getUsersProfile(userId);\n        dispatch(setProfileInfo(data));\n        dispatch(setProfileImage(data.photos.large));\n    }\n};\n\nexport const changeProfileInfo = (profileInfo) => {\n    return async (dispatch) => {\n        const data = await profileApi.setUsersProfile(profileInfo);\n        if (data.resultCode === 0) {\n            dispatch(setProfileInfo(profileInfo));\n        } else {\n            console.log(data.messages)\n        }\n    }\n};\n\nexport const getUsersStatus = (userId) => {\n    return async (dispatch) => {\n        const status = await profileApi.getStatus(userId);\n        dispatch(setStatus(status));\n    }\n};\n\nexport const changeStatus = (status) => {\n    return async (dispatch) => {\n        const data = await profileApi.updateStatus(status);\n        if (data.resultCode === 0) {\n            dispatch(setStatus(status));\n        }\n    };\n};\n\nexport const uploadProfileImage = (imageFile) => {\n    return async (dispatch) => {\n        const data = await profileApi.putProfilePhoto(imageFile);\n        if (data.resultCode === 0) {\n            dispatch(setProfileImage(data.data.photos.large))\n        }\n        console.log(data.messages);\n    }\n};\n\nexport default profileReducer;\n","const ADD_MESSAGE = 'social-network/dialogs/ADD-MESSAGE';\n\nlet initialState = {\n    dialogs: [\n        {id: 0, Name: 'Masha'},\n        {id: 1, Name: 'Misha'},\n        {id: 2, Name: 'Sasha'},\n        {id: 3, Name: 'Pasha'},\n        {id: 4, Name: 'Dasha'},\n    ],\n\n    messages: [\n        {id: 0, text: 'buy'},\n        {id: 1, text: 'hello'},\n        {id: 2, text: 'hey'},\n        {id: 3, text: 'where are you'},\n        {id: 4, text: 'miss u'},\n    ],\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_MESSAGE:\n            let message = {\n                id: state.messages.length,\n                // text: state.newMessageText,\n                text: action.newMessageText,\n            };\n            return  {\n                ...state,\n                messages: [...state.messages, message],\n            };\n        default: return state;\n    }\n};\n\nexport const addMessage = (newMessageText) => ({type: ADD_MESSAGE, newMessageText});\n\nexport default dialogsReducer;\n","import {authApi, securityApi} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_USER_DATA = 'social-network/auth/SET_USER_DATA';\nconst TOGGLE_IS_CAPTCHA_REQUIRED = 'social-network/auth/TOGGLE_IS_CAPTCHA_REQUIRED';\nconst SET_CAPTCHA_URL = 'social-network/auth/SET_CAPTCHA_URL';\n\nlet initialState = {\n    userId: null,\n    login: null,\n    email: null,\n    isAuth: false,\n    isCaptchaRequired: false,\n    captchaUrl: null,\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.payload,\n            };\n        case TOGGLE_IS_CAPTCHA_REQUIRED:\n            return {\n                ...state,\n                isCaptchaRequired: action.flag,\n            };\n        case SET_CAPTCHA_URL:\n            return {\n                ...state,\n                captchaUrl: action.captchaUrl\n            };\n        default:\n            return state;\n    }\n};\n\nexport const authorizeUser = (userId, login, email, isAuth) => {\n    return {\n        type: SET_USER_DATA,\n        payload: {userId, login, email, isAuth},\n    }\n};\nexport const toggleIsCaptchaRequired = (flag) => ({type: TOGGLE_IS_CAPTCHA_REQUIRED, flag});\nexport const setCaptchaUrl = (captchaUrl) => ({type: SET_CAPTCHA_URL, captchaUrl});\n\nexport const setAuthInfo = () => {\n    return async (dispatch) => {\n        const data = await authApi.getAuthData();\n        if (data.resultCode === 0) {\n            let {id, login, email} = data.data;\n            dispatch(authorizeUser(id, login, email, true));\n        }\n    }\n};\n\nexport const getCaptcha = () => {\n    return async (dispatch) => {\n        const data = await securityApi.getCaptcha();\n        dispatch(setCaptchaUrl(data.url));\n    }\n};\n\nexport const login = (email, password, rememberMe, captcha) => {\n    return async (dispatch) => {\n        const data = await authApi.login(email, password, rememberMe, captcha);\n        dispatch(toggleIsCaptchaRequired(false));\n\n        if (data.resultCode === 0) {\n            dispatch(setAuthInfo());\n            dispatch(setCaptchaUrl(null));\n        } else {\n            if (data.resultCode === 10) {\n                dispatch(toggleIsCaptchaRequired(true));\n                dispatch(getCaptcha());\n            }\n            let message = data.messages.length > 0 ? data.messages[0] : 'Something wrong';\n            dispatch(stopSubmit('login', {_error: message}));\n        }\n    }\n};\n\nexport const logout = () => {\n    return async (dispatch) => {\n        const data = await authApi.logout();\n        if (data.resultCode === 0) {\n            dispatch(authorizeUser(null, null, null, false));\n        }\n    }\n};\n\nexport default authReducer;\n","import {setAuthInfo} from \"./authReducer\";\n\nconst TOGGLE_IS_INITIALIZED = 'social-network/app/TOGGLE_IS_INITIALIZED';\n\nconst initialState = {\n    isInitialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case TOGGLE_IS_INITIALIZED :\n            return {\n                ...state,\n                isInitialized: action.flag,\n            };\n        default:\n            return state;\n    }\n};\n\nexport const toggleIsInitialized = (flag) => ({type: TOGGLE_IS_INITIALIZED, flag});\n\nexport const initializeApp = () => {\n    return async (dispatch) => {\n        await dispatch(setAuthInfo());\n        dispatch(toggleIsInitialized(true));\n    }\n};\n\nexport default appReducer;\n","import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\nimport profileReducer from './profileReducer';\nimport dialogsReducer from './dialogsReducer';\nimport friendsReducer from './friendsReducer';\nimport authReducer from './authReducer';\nimport thunkMiddleware from 'redux-thunk';\nimport {reducer as formReducer} from \"redux-form\";\nimport appReducer from \"./appReducer\";\n\nlet reducers = combineReducers({\n    dialogPage: dialogsReducer,\n    profilePage: profileReducer,\n    friendsPage: friendsReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer,\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(\n    applyMiddleware(thunkMiddleware)\n));\n\n/*let store = createStore(\n    reducers,\n    applyMiddleware(thunkMiddleware),\n);*/\n\nexport default store;\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport './NavBar.css'\n\nconst NavBar = () => {\n    return (\n        <div className='NavBar_padding'>\n            <nav >\n                <div><NavLink className='NavBar-NavLink' to='/profile'>Profile</NavLink></div>\n                <div><NavLink className='NavBar-NavLink' to='/dialogs'>Messages</NavLink></div>\n                {/*<div><NavLink className='NavBar-NavLink' to='/music'>Music</NavLink></div>*/}\n                <div><NavLink className='NavBar-NavLink' to='/friends'>Friends</NavLink></div>\n                <div><NavLink className='NavBar-NavLink' to='/news'>News</NavLink></div>\n                {/*<div><NavLink className='NavBar-NavLink' to='/settings'>Settings</NavLink></div>*/}\n            </nav>\n        </div>\n    );\n};\n\nexport default NavBar;\n","import React from 'react';\nimport './News.css'\nimport {compose} from \"redux\";\nimport withAuthRedirect from \"../../hocs/withAuthRedirect\";\n\nconst News = () => {\n    return (\n        <div className='News_padding'>\n            <h1>Today is Masha's birthday!!!!!!</h1>\n            <img width='400px' src='https://i.pinimg.com/originals/d0/40/d3/d040d35c4329b603f887b7344af88c64.jpg'/>\n        </div>\n    );\n};\n\nexport default compose(\n    withAuthRedirect,\n)(News)\n","import React from 'react';\nimport './Message.css'\n\nconst Message = (props) => {\n    return (\n        <div>\n            {props.text}\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react';\nimport './Dialog.css'\nimport {NavLink} from 'react-router-dom';\n\nconst Dialog = (props) => {\n    let path = '/dialogs/' + props.id;\n\n    return (\n        <div >\n            <NavLink to={path} className='Dialog-NavLink'>\n                {props.name}\n            </NavLink>\n        </div>\n    )\n}\n\nexport default Dialog\n","import React from \"react\";\nimport './FormsControl.css'\n\nexport const FormControl = ({input, meta, ...props}) => {\n    let elementClassName = meta.touched && meta.error ? 'FormError-Input' : null;\n    return (\n        <div className='FormError'>\n            <props.element {...input} {...props}\n                           className={elementClassName}\n            />\n            {meta.touched && meta.error &&(\n                <span className='FormError-Text'>{meta.error}</span>\n            )}\n        </div>\n    );\n};\n\nexport const TextArea = (props) => {\n    return (\n        <FormControl {...props} element='textarea'/>\n    )\n};\n\nexport const Input = (props) => {\n    return (\n        <FormControl {...props} element='input'/>\n    )\n};\n","export const required = (value) => {\n    if (value) return undefined;\n    return 'Field is required'\n};\n\nexport const maxLengthCreator = (maxLength) => {\n    return (value) => {\n        if (value && value.length > maxLength) return `Max length is ${maxLength} symbols!`;\n        return undefined;\n    }\n};\n","import {Field, reduxForm} from \"redux-form\";\nimport {TextArea} from \"../../common/FormsControls\";\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\nimport React from \"react\";\n\nconst maxLength100 = maxLengthCreator(100);\n\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} >\n            <Field\n                component={TextArea}\n                name={'newMessageText'}\n                placeholder={'Enter new message:'}\n                validate={[required, maxLength100]}\n            />\n            <div>\n                <button>add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm({\n    form: 'dialogAddMessageForm'\n})(AddMessageForm)\n","import React from 'react';\nimport './Dialogs.css'\nimport Message from './Message/Message';\nimport Dialog from './Dialog/Dialog';\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\n\nconst Dialogs = (props) => {\n    const dialogsElements = props.dialogPage.dialogs.map((dialog) => {\n        return (\n            <Dialog\n                id={dialog.id}\n                name={dialog.Name}\n                key={dialog.id}\n            />\n        );\n    });\n\n    const messagesElements = props.dialogPage.messages.map((message) => {\n        return <Message text={message.text} key={message.id}/>\n    });\n\n    const addMessage = (formData) => {\n        props.addMessage(formData.newMessageText);\n    }\n\n    return (\n        <div className='Dialogs_gridTemplate Dialogs_padding'>\n            <div >\n                {dialogsElements}\n            </div>\n            <div >\n                {messagesElements}\n                <AddMessageForm onSubmit={addMessage}/>\n            </div>\n        </div>\n    );\n};\n\nexport default Dialogs\n","import React from 'react';\nimport './Dialogs.css'\nimport {\n    addMessage,\n} from '../../Redux/dialogsReducer';\nimport Dialogs from './Dialogs';\nimport {connect} from 'react-redux';\nimport {compose} from \"redux\";\nimport withAuthRedirect from \"../../hocs/withAuthRedirect\";\n\nclass DialogsContainer extends React.Component {\n    render() {\n        return <Dialogs {...this.props}/>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogPage: state.dialogPage,\n        isAuth: state.auth.isAuth,\n    }\n}\n\nexport default compose(\n    withAuthRedirect,\n    connect(mapStateToProps, {\n        addMessage,\n    }),\n)(DialogsContainer)\n","import React, {useEffect, useState} from \"react\";\n\nconst ProfileStatusWithHooks = (props) => {\n    const [editMode, setEditMode] = useState(false);\n    const [status, setStatus] = useState(props.status);\n\n    const saveStatus = () => {\n        props.changeStatus(status);\n        setEditMode(false);\n    };\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    };\n\n    useEffect(() => {\n        setStatus(props.status);\n    }, [props.status]);\n\n    return (\n        <>\n            {editMode && (\n                <div>\n                    <input\n                        type='text'\n                        value={status}\n                        onChange={onStatusChange}\n                        onBlur={saveStatus}\n                        autoFocus\n                    />\n                </div>\n            )}\n            {!editMode && (\n                <div onDoubleClick={() => setEditMode(true)}>\n                    <span>{props.status || 'How are you doing?'}</span>\n                </div>\n            )}\n        </>\n    )\n};\n\nexport default ProfileStatusWithHooks;\n","import React from \"react\";\n\nconst AboutMe = (props) => {\n    return (\n        <div>\n            <div>{props.fullName}</div>\n            <hr />\n            <div>{props.aboutMe}</div>\n            <div>\n                Looking for a job: {props.lookingForAJob ? 'yes' : 'no'}\n            </div>\n            <div>{props.lookingForAJobDescription}</div>\n            <div>\n                {Object.keys(props.contacts).map((name, id) => {\n                    return (\n                        <Contact key={id} contactName={name} contactValue={props.contacts[name]}/>\n                    )\n                })}\n            </div>\n        </div>\n    )\n};\n\nconst Contact = (props) => {\n    return (\n        <div>\n            {props.contactName}: {props.contactValue}\n        </div>\n    )\n};\n\nexport default AboutMe;\n","import React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Input, TextArea} from \"../../../common/FormsControls\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\n\nconst AboutMeChangingForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field\n                component={Input}\n                name='fullName'\n                placeholder='Full Name:'\n            />\n            <Field\n                component={TextArea}\n                name='aboutMe'\n                placeholder='Tell something about yourself:'\n            />\n            <label>\n                Are you looking for a job?\n            <Field\n                component={Input}\n                name='lookingForAJob'\n                type='checkbox'\n            />\n            </label>\n            <Field\n                component={Input}\n                name='lookingForAJobDescription'\n                placeholder='Why are you looking for a job?:'\n            />\n            <b>Contacts</b>\n            <div>\n                {Object.keys(props.initialValues.contacts).map((name, id) => {\n                    return (\n                        <Contact key={id} contactName={name}/>\n                    )\n                })}\n            </div>\n            <button>save</button>\n        </form>\n    )\n};\n\nconst Contact = (props) => {\n    return (\n        <>\n            {props.contactName}:\n            <Field\n                component={Input}\n                name={`contacts.${props.contactName}`}\n            />\n        </>\n    )\n};\n\nexport default compose(\n    connect(state => ({\n        initialValues: state.profilePage\n    }), {}),\n    reduxForm({form: 'aboutMeChanging'}),\n)(AboutMeChangingForm);\n","import React, {useState} from 'react';\nimport './ProfileInfo.css';\nimport ProfileStatusWithHooks from './ProfileStatus/ProfileStatusWithHooks';\nimport defaultUserIcon from '../../../res/userIcon.png';\nimport AboutMe from './AboutMe/AboutMe';\nimport AboutMeChangingForm from './AboutMeChangingForm/AboutMeChangingForm';\n\nconst ProfileInfo = (props) => {\n  const [editMode, setEditMode] = useState(false);\n\n  const onFileSubmit = (event) => {\n    if (event.target.files.length) {\n      props.uploadProfileImage(event.target.files[0]);\n    }\n  };\n\n  const onAboutMeFormSubmit = (formData) => {\n    props.changeProfileInfo(formData);\n    setEditMode(false);\n  };\n\n  return (\n    <div className='ProfileInfo-Wrapper'>\n      <div>\n        <div>\n          <img className='ProfileInfo-Image'\n               src={props.profileImage || defaultUserIcon}/>\n        </div>\n        {props.isOwner && (\n          // <UploadOutlined onChange={onFileSubmit}/> //TODO разобраться с upload\n          <input className='FileInput' type='file' onChange={onFileSubmit}/>\n        )}\n        <div>Status:</div>\n        {props.isOwner && (\n          <ProfileStatusWithHooks\n            status={props.status}\n            changeStatus={props.changeStatus}\n          />\n        )}\n        {!props.isOwner && (\n          <div>props.status</div>\n        )}\n      </div>\n      <div>\n        {!editMode && (\n          <div>\n            <AboutMe\n              fullName={props.fullName}\n              aboutMe={props.aboutMe}\n              contacts={props.contacts}\n              lookingForAJob={props.lookingForAJob}\n              lookingForAJobDescription={props.lookingForAJobDescription}\n            />\n            {props.isOwner && (\n              <button onClick={() => setEditMode(true)}>Change information about you </button>\n            )}\n          </div>\n        )}\n        {editMode && (\n          <AboutMeChangingForm\n            onSubmit={onAboutMeFormSubmit}\n          />\n        )}\n      </div>\n      <iframe style={{border:'0px #ffffff none'}} id=\"InvestReadyiFrame\" name=\"InvestReady\"\n              scrolling=\"false\"\n              frameBorder=\"0\" marginHeight=\"0px\" marginWidth=\"0px\" height=\"550px\" width=\"100%\"\n              allowFullScreen/>\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import React from 'react';\nimport './Post.css'\n\nconst Post = (props) => {\n    return (\n        <div className='post'>\n            <img alt='user icon' src='https://yt3.ggpht.com/a/AGF-l78D8sRdVCMJf7gg7Is2apd6wxydsVsoRJ6zPQ=s900-c-k-c0xffffffff-no-rj-mo'/>\n            {props.message}\n            <div>\n                {props.likeCount} likes\n            </div>\n        </div>\n    );\n}\n\nexport default Post\n","import {maxLengthCreator, required} from \"../../../../utils/validators\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {TextArea} from \"../../../common/FormsControls\";\nimport React from \"react\";\n\nconst maxLength200 = maxLengthCreator(200);\n\nconst AddPostForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field\n                    name='newPostText'\n                    component={TextArea}\n                    placeholder='Enter new post text'\n                    validate={[required, maxLength200]}\n                />\n            </div>\n            <div>\n                <button>Post</button>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm({\n    form: 'profileAddPostForm',\n})(AddPostForm)\n","import React from 'react';\nimport Post from './Post/Post';\nimport './MyPosts.css'\nimport AddPostForm from \"./AddPostForm/AddPostForm\";\n\n\nconst MyPosts = (props) => {\n    let postElements = props.posts.map((post) => {\n        return <Post\n            message={post.message}\n            likeCount={post.likeCount}\n            key={post.id}\n        />\n    });\n\n    let addPost = (formData) => {\n        props.addPost(formData.newPostText);\n    };\n\n    return (\n        <div>\n            <div className='my-posts__new-post'>\n                <AddPostForm onSubmit={addPost}/>\n            </div>\n            <div className='my-posts__post-list'>\n                {postElements}\n            </div>\n        </div>\n    );\n};\n\nexport default MyPosts;\n","import React from 'react';\nimport './MyPosts.css'\nimport {addPost} from '../../../Redux/profileReducer';\nimport MyPosts from './MyPosts';\nimport {connect} from 'react-redux';\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n};\n\nconst MyPostsContainer = connect(mapStateToProps, {\n    addPost,\n})(MyPosts);\n\nexport default MyPostsContainer\n","import React from 'react';\nimport './Profile.css'\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\n\nconst Profile = (props) => {\n    return (\n        <div className='Profile_padding'>\n            <ProfileInfo {...props} />\n            <MyPostsContainer/>\n        </div>\n    );\n};\n\nexport default Profile;\n","import * as React from \"react\";\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {\n    addPost,\n    changeProfileInfo,\n    changeStatus,\n    getUsersProfile,\n    getUsersStatus,\n    uploadProfileImage\n} from \"../../Redux/profileReducer\";\nimport {toggleIsFetching} from \"../../Redux/friendsReducer\";\nimport Preloader from \"../common/Preloader\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n    //TODO toggle isFetching вынести в отдельный редюсер\n    //TODO все перекинуть в hooks либо деструктуризировать пропсы\n    componentDidMount() {\n        // this.props.toggleIsFetching();\n        this.refreshProfile()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.match.params.userId !== prevProps.match.params.userId\n        || (!this.props.match.params.userId && this.props.authorizedUserId !== prevProps.authorizedUserId)) {\n           this.refreshProfile();\n        }\n    }\n\n    refreshProfile() {\n        let userId = this.props.match.params.userId || this.props.authorizedUserId;\n        if (!userId) {\n            this.props.history.push('/login'); //TODO remove deprecated code\n        }\n        this.props.getUsersProfile(userId);\n        this.props.getUsersStatus(userId);\n    }\n\n    render() {\n        const isOwner = !this.props.match.params.userId\n            || this.props.match.params.userId === this.props.authorizedUserId;\n        return (\n            <>\n                {/*{this.props.isFetching && <Preloader />}*/}\n                <Profile {...this.props} isOwner={isOwner}/>\n            </>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        authorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth,\n        ...state.profilePage,\n    }\n};\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {\n        addPost,\n        toggleIsFetching,\n        getUsersProfile,\n        getUsersStatus,\n        changeStatus,\n        uploadProfileImage,\n        changeProfileInfo,\n    }),\n)(ProfileContainer)\n","import React from 'react'\nimport './Header.css'\nimport {NavLink} from 'react-router-dom';\nimport logo from '../../res/logo.png'\n\nconst Header = (props) => {\n    return (\n        <header className='Header'>\n            <img className='SiteLogo' src={logo}/>\n            <div className='LoginBlock'>\n                {props.isAuth && ( //TODO сделать красиво\n                    <div>\n                        {props.login}\n                        <br />\n                        <button onClick={props.logout}>Logout</button>\n                    </div>\n                )}\n                {!props.isAuth && <NavLink to='/login'>Login</NavLink>}\n            </div>\n        </header>\n    );\n};\n\nexport default Header;\n","import Header from './Header';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {logout} from '../../Redux/authReducer';\n\nclass HeaderContainer extends React.Component {\n    render() {\n        return <Header {...this.props} />\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuth: state.auth.isAuth,\n        login: state.auth.login,\n    }\n};\n\nexport default connect(mapStateToProps, {\n    logout,\n})(HeaderContainer);\n","import {Field, reduxForm} from \"redux-form\";\nimport React from \"react\";\nimport {Input} from \"../../common/FormsControls\";\nimport {required} from \"../../../utils/validators\";\nimport '../../common/FormsControl.css'\n\nconst LoginForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field\n                    placeholder={'Login'}\n                    name={'login'}\n                    type='text'\n                    component={Input}\n                    validate={[required]}\n                />\n            </div>\n            <div>\n                <Field\n                    placeholder={'Password'}\n                    name={'password'}\n                    type='password'\n                    component={Input}\n                    validate={[required]}\n                />\n            </div>\n            <div>\n                <Field\n                    name={'rememberMe'}\n                    type='checkbox'\n                    component={Input}\n                />\n                remember me\n            </div>\n            {props.error && (\n                <div className=\"FormError_summary\">\n                    Incorrect login or password\n                </div>\n            )}\n            {props.isCaptchaRequired && <img src={props.captchaUrl}/>}\n            {props.isCaptchaRequired && (\n                <div>\n                    <Field\n                        name={'captcha'}\n                        placeholder={'captcha'}\n                        type='text'\n                        validate={[required]}\n                        component={Input}\n                    />\n                </div>\n            )}\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n};\n\nexport default reduxForm({form: 'login'})(LoginForm);\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {login} from \"../../Redux/authReducer\";\nimport LoginForm from \"./LoginForm/LoginForm\";\nimport {Redirect} from \"react-router-dom\";\nimport './Login.css'\n\nclass Login extends React.Component {\n    render() {\n        const onSubmit = (formData) => {\n            this.props.login(formData.login, formData.password, formData.rememberMe, formData.captcha);\n        };\n\n        if (this.props.isAuth) return <Redirect to='/profile'/>;\n\n        return (\n            <div className='Login_padding'>\n                <h1>Login</h1>\n                <LoginForm\n                    onSubmit={onSubmit}\n                    isCaptchaRequired={this.props.isCaptchaRequired}\n                    captchaUrl={this.props.captchaUrl}\n                />\n                <p>If you don't have an account, use test login and password.</p>\n                <p>Login: free@samuraijs.com</p>\n                <p>Password: free</p>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuth: state.auth.isAuth,\n        isCaptchaRequired: state.auth.isCaptchaRequired,\n        captchaUrl: state.auth.captchaUrl,\n    }\n};\n\nexport default connect(mapStateToProps, {\n    login\n})(Login) //TODO сделать контейнер\n","import {Provider} from \"react-redux\";\nimport store from \"../Redux/reduxStore\";\nimport React from \"react\";\n\nconst withStoreProvider = (Component) => {\n    const withStoreProviderComponent = (props) => {\n        return (\n            <Provider store={store}>\n                <Component {...props} />\n            </Provider>\n        )\n    };\n\n    withStoreProviderComponent.displayName = `withStoreProvider(${Component.displayName\n    || Component.name\n    || 'Component'})`;\n\n    return withStoreProviderComponent;\n};\n\nexport default withStoreProvider;\n","import React, {Suspense} from \"react\";\nimport Preloader from \"../components/common/Preloader\";\n\nconst withSuspense = (Component) => {\n    const withSuspenseComponent = (props) => {\n        return (\n            <Suspense fallback={<Preloader />}>\n                <Component {...props} />\n            </Suspense>\n        );\n    };\n\n    withSuspenseComponent.displayName = `withSuspense(${Component.displayName\n    || Component.Name\n    || 'Component'})`;\n\n    return withSuspenseComponent;\n};\n\nexport default withSuspense;\n","import React from \"react\";\nimport {HashRouter} from \"react-router-dom\";\n\nconst withHashRouter = (Component) => {\n    const withHashRouterComponent = (props) => {\n        return (\n            <HashRouter>\n                <Component {...props} />\n            </HashRouter>\n        );\n    };\n\n    withHashRouterComponent.displayName = `withHashRouter(${Component.displayName\n    || Component.name\n    || 'Component'})`;\n\n    return withHashRouterComponent;\n};\n\nexport default withHashRouter;\n","import React, {lazy} from 'react';\nimport './App.css';\nimport NavBar from './components/NavBar/NavBar';\nimport {Redirect, Route, withRouter} from 'react-router-dom';\nimport Music from './components/Music/Music';\nimport News from './components/News/News';\nimport Settings from './components/Settings/Settings';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./Redux/appReducer\";\nimport Preloader from \"./components/common/Preloader\";\nimport withBrowserRouter from \"./hocs/withBrowserRouter\";\nimport withStoreProvider from \"./hocs/withStoreProvider\";\nimport withSuspense from \"./hocs/withSuspense\";\nimport withHashRouter from \"./hocs/withHashRouter\";\nimport {Switch} from \"react-router\";\n\nconst FriendsContainer = React.lazy(() => import(\"./components/Friends/FriendsContainer\"));\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.isInitialized) {\n            return <Preloader/>\n        }\n        // TODO content component\n        return (\n            <div className='app-wrapper'>\n                <div className='app-wrapper__header'><HeaderContainer/></div>\n                <div className='app-wrapper__nav'><NavBar/></div>\n                <div className='app-wrapper__content'>\n                    <Switch>\n                        <Redirect exact from='/' to='/profile' />\n                        <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                        <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                        <Route path='/news' render={() => <News/>}/>\n                        {/*<Route path='/music' render={() => <Music/>}/>*/}\n                        <Route path='/friends' render={() => withSuspense(FriendsContainer)()}/>\n                        {/*<Route path='/settings' render={() => <Settings/>}/>*/}\n                        <Route path='/login' render={() => <Login/>}/>\n                        <Route path='*' render={() => <h1>404: Page not found</h1>} />\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isInitialized: state.app.isInitialized,\n    }\n};\n\nexport default compose(\n    withHashRouter,\n    withStoreProvider,\n    withRouter,\n    connect(mapStateToProps, {initializeApp}),\n)(App);\n","import React from 'react';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./Redux/reduxStore\"\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n","import preloader from \"../../res/preloader.svg\";\nimport React from \"react\";\n\nlet Preloader = (props) => {\n    return (\n        <div>\n            <img alt='Loading...' className='preloader' src={preloader} />\n        </div>\n    )\n}\n\nexport default Preloader;\n","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nconst withAuthRedirect = (Component) => {\n    class withAuthRedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\n            return <Component {...this.props}/>;\n        }\n    }\n\n    withAuthRedirectComponent.displayName = `withAuthRedirect(${Component.displayName\n    || Component.name\n    || 'Component'})`;\n\n    const mapStateToProps = (state) => {\n        return {\n            isAuth: state.auth.isAuth,\n        }\n    }\n    return connect(mapStateToProps, {})(withAuthRedirectComponent);\n}\n\nexport default withAuthRedirect;\n","export const updateObjectInArray = (objArray, objKeyName, objKeyValue, newObjProps) => {\n    return objArray.map(obj => {\n        if(obj[objKeyName] === objKeyValue) {\n            return {...obj, ...newObjProps}\n        }\n        return obj;\n    })\n};\n","import {usersApi} from \"../api/api\";\nimport {updateObjectInArray} from \"../utils/updateObjectInArray\";\n\nconst SET_FRIENDS = 'social-network/friends/SET_FRIENDS';\nconst TOGGLE_FOLLOWED = 'social-network/friends/TOGGLE_FOLLOWED';\nconst SET_CURRENT_PAGE = 'social-network/friends/SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'social-network/friends/SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'social-network/friends/TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_IN_PROGRESS = 'social-network/friends/TOGGLE_IS_FOLLOWING_IN_PROGRESS';\n\nlet initialState = {\n    friends: [],\n    pageSize: 5,\n    totalUsersCount: 20,\n    currentPage: 1,\n    isFetching: false,\n    isFollowingInProgress: false,\n};\n\nconst friendsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_FRIENDS:\n            return {\n                ...state,\n                friends: [...action.friends],\n            };\n        case TOGGLE_FOLLOWED:\n            return {\n                ...state,\n                friends: updateObjectInArray(\n                    state.friends,\n                    'id',\n                    action.friendId,\n                    {followed: action.flag,}\n                    ),\n            };\n        case SET_CURRENT_PAGE:\n            return {\n                ...state,\n                currentPage: action.pageNumber,\n            };\n        case SET_TOTAL_USERS_COUNT:\n            return {\n                ...state,\n                totalUsersCount: action.totalCount,\n            };\n        case TOGGLE_IS_FETCHING:\n            return {\n                ...state,\n                isFetching: action.flag,\n            };\n        case TOGGLE_IS_FOLLOWING_IN_PROGRESS:\n            return {\n                ...state,\n                isFollowingInProgress: action.flag,\n            };\n        default:\n            return state;\n    }\n};\n\nexport const setFriends = (friends) => ({type: SET_FRIENDS, friends,});\nexport const toggleFollowed = (friendId, flag) => ({type: TOGGLE_FOLLOWED, friendId, flag});\nexport const setCurrentPage = (pageNumber) => ({type: SET_CURRENT_PAGE, pageNumber,});\nexport const setTotalUsersCount = (totalCount) => ({type: SET_TOTAL_USERS_COUNT, totalCount,});\nexport const toggleIsFetching = (flag) => ({type: TOGGLE_IS_FETCHING, flag});\nexport const toggleIsFollowingInProgress = (flag) => ({type: TOGGLE_IS_FOLLOWING_IN_PROGRESS, flag});\n\nexport const getFriends = (currentPage, pageSize) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n\n        const data = await usersApi.getUsers(currentPage, pageSize);\n\n        dispatch(setFriends(data.items));\n        dispatch(setTotalUsersCount(data.totalCount));\n        dispatch(toggleIsFetching(false));\n    }\n};\n\nexport const toggleFollowingFriend = (friendId, flag) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFollowingInProgress(true));\n\n        const asyncFunction = flag ? usersApi.follow : usersApi.unfollow;\n        const data = await asyncFunction(friendId);\n\n        if (data.resultCode === 0) {\n            dispatch(toggleFollowed(friendId, flag));\n        }\n        dispatch(toggleIsFollowingInProgress(false));\n    }\n};\n\nexport default friendsReducer\n","module.exports = __webpack_public_path__ + \"static/media/userIcon.d988dee4.png\";"],"sourceRoot":""}