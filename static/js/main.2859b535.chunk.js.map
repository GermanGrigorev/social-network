{"version":3,"sources":["hocs/withAuthRedirect.js","res/preloader.svg","res/logo.png","api/api.js","serviceWorker.js","Redux/profileReducer.js","Redux/dialogsReducer.js","Redux/authReducer.js","Redux/appReducer.js","Redux/reduxStore.js","components/NavBar/NavBar.jsx","components/News/News.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialog/Dialog.jsx","components/common/FormsControls.jsx","utils/validators/index.js","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/AboutMe/AboutMe.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddPostForm/AddPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/LoginForm/LoginForm.jsx","components/Login/Login.jsx","hocs/withStoreProvider.js","hocs/withSuspense.js","hocs/withHashRouter.js","App.js","index.js","components/common/Preloader.jsx","utils/updateObjectInArray.js","Redux/friendsReducer.js","res/userIcon.png"],"names":["withAuthRedirect","Component","withAuthRedirectComponent","this","props","isAuth","to","React","displayName","name","connect","state","auth","module","exports","axiosInstance","axios","withCredentials","baseURL","headers","profileApi","getUsersProfile","userId","get","response","data","getStatus","updateStatus","status","put","putProfilePhoto","image","formData","FormData","append","usersApi","getUsers","currentPage","pageSize","follow","friendId","post","unfollow","delete","authApi","getAuthData","login","email","password","rememberMe","captcha","logout","securityApi","getCaptcha","Boolean","window","location","hostname","match","ADD_POST","DELETE_POST","SET_PROFILE","TOGGLE_IS_FETCHING","SET_STATUS","SET_PROFILE_IMAGE","initialState","fullName","profileImage","aboutMe","posts","lookingForAJob","lookingForAJobDescription","contacts","isFetching","addPost","newPostText","type","setStatus","profileReducer","action","id","length","message","likeCount","filter","p","postId","photos","large","imageUrl","ADD_MESSAGE","dialogs","Name","messages","text","dialogsReducer","newMessageText","SET_USER_DATA","SET_CAPTCHA_URL","isCaptchaRequired","captchaUrl","authorizeUser","payload","toggleIsCaptchaRequired","flag","setCaptchaUrl","setAuthInfo","dispatch","a","resultCode","authReducer","isInitialized","appReducer","reducers","combineReducers","dialogPage","profilePage","friendsPage","friendsReducer","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","NavBar","className","News","width","src","Message","Dialog","path","FormControl","input","meta","elementClassName","touched","error","element","Textarea","Input","required","value","maxLengthCreator","maxLength","maxLength100","reduxForm","onSubmit","handleSubmit","Field","component","placeholder","validate","Dialogs","dialogsElements","map","dialog","key","messagesElements","addMessage","DialogsContainer","ProfileStatusWithHooks","useState","editMode","setEditMode","useEffect","onChange","e","currentTarget","onBlur","changeStatus","autoFocus","onDoubleClick","Contact","contactName","contactValue","AboutMe","Object","keys","ProfileInfo","defaultUserIcon","isOwner","event","target","files","uploadProfileImage","Post","maxLength200","MyPosts","postElements","MyPostsContainer","Profile","ProfileContainer","refreshProfile","prevProps","prevState","snapshot","params","authorizedUserId","history","push","getUsersStatus","withRouter","toggleIsFetching","profileData","imageFile","console","log","Header","logo","onClick","HeaderContainer","Login","url","stopSubmit","_error","withStoreProvider","withStoreProviderComponent","withSuspense","withSuspenseComponent","fallback","Preloader","withHashRouter","withHashRouterComponent","FriendsContainer","lazy","App","initializeApp","exact","from","render","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","preloader","updateObjectInArray","objArray","objKeyName","objKeyValue","newObjProps","obj","SET_FRIENDS","TOGGLE_FOLLOWED","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","friends","totalUsersCount","isFollowingInProgress","toggleFollowed","setCurrentPage","pageNumber","toggleIsFollowingInProgress","getFriends","items","totalCount","toggleFollowingFriend","asyncFunction","followed"],"mappings":"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","file":"static/js/main.2859b535.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst withAuthRedirect = (Component) => {\r\n    class withAuthRedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>;\r\n        }\r\n    }\r\n\r\n    withAuthRedirectComponent.displayName = `withAuthRedirect(${Component.displayName\r\n    || Component.name\r\n    || 'Component'})`;\r\n\r\n    const mapStateToProps = (state) => {\r\n        return {\r\n            isAuth: state.auth.isAuth,\r\n        }\r\n    }\r\n    return connect(mapStateToProps, {})(withAuthRedirectComponent);\r\n}\r\n\r\nexport default withAuthRedirect;\r\n","module.exports = __webpack_public_path__ + \"static/media/preloader.b62dcd9b.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.52694f72.png\";","import * as axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '4c7b227d-d83d-45ab-9f12-6ba2c0dc507f',\r\n    },\r\n});\r\n\r\nexport const profileApi = {\r\n    async getUsersProfile(userId) {\r\n        const response = await axiosInstance.get(`profile/${userId}`);\r\n        return response.data;\r\n    },\r\n    async getStatus(userId) {\r\n        const response = await axiosInstance.get(`profile/status/${userId}`);\r\n        return response.data;\r\n    },\r\n    async updateStatus(status) {\r\n        const response = await axiosInstance.put('profile/status', {status: status});\r\n        return response.data;\r\n    },\r\n    async putProfilePhoto(image) {\r\n        const formData = new FormData();\r\n        formData.append('image', image);\r\n\r\n        const response = await axiosInstance.put('profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n            },\r\n        });\r\n        return response.data;\r\n    }\r\n};\r\n\r\nexport const usersApi = {\r\n    async getUsers(currentPage = 1, pageSize = 10) {\r\n        const response = await axiosInstance.get(`users?page=${currentPage}&count=${pageSize}`);\r\n        return response.data;\r\n    },\r\n\r\n    async follow(friendId) {\r\n        const response = await axiosInstance.post(`follow/${friendId}`);\r\n        return response.data;\r\n    },\r\n\r\n    async unfollow(friendId) {\r\n        const response = await axiosInstance.delete(`follow/${friendId}`);\r\n        return response.data;\r\n    },\r\n};\r\n\r\nexport const authApi = {\r\n    async getAuthData() {\r\n        const response = await axiosInstance.get('auth/me');\r\n        return response.data;\r\n    },\r\n    async login(email, password, rememberMe, captcha) {\r\n        const response = await axiosInstance.post('/auth/login', {\r\n            email,\r\n            password,\r\n            rememberMe,\r\n            captcha,\r\n        });\r\n        return response.data;\r\n    },\r\n    async logout() {\r\n        const response = await axiosInstance.delete('/auth/login');\r\n        return response.data;\r\n    },\r\n};\r\n\r\nexport const securityApi = {\r\n    async getCaptcha() {\r\n        const response = await axiosInstance.get('/security/get-captcha-url');\r\n        return response.data;\r\n    },\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {profileApi} from \"../api/api\";\r\n\r\nconst ADD_POST = 'social-network/profile/ADD-POST';\r\nconst DELETE_POST = 'social-network/profile/DELETE_POST';\r\nconst SET_PROFILE = 'social-network/profile/SET_PROFILE';\r\nconst TOGGLE_IS_FETCHING = 'social-network/profile/TOGGLE_IS_FETCHING';\r\nconst SET_STATUS = 'social-network/profile/SET_STATUS';\r\nconst SET_PROFILE_IMAGE = 'social-network/profile/SET_PROFILE_IMAGE';\r\n\r\nlet initialState = {\r\n    fullName: '',\r\n    profileImage: '', //TODO возможно заменить на photos\r\n    aboutMe: '',\r\n    posts: [],\r\n    status: '',\r\n    lookingForAJob: false,\r\n    lookingForAJobDescription: '',\r\n    contacts: {},\r\n    isFetching: false,\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let post = {\r\n                id: state.posts.length,\r\n                message: action.newPostText,\r\n                likeCount: 2,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, post],\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter((p) => p.id !== action.postId),\r\n            };\r\n        case SET_PROFILE:\r\n            return {\r\n                ...state,\r\n                fullName: action.fullName,\r\n                aboutMe: action.aboutMe,\r\n                contacts: action.contacts,\r\n                lookingForAJob: action.lookingForAJob,\r\n                lookingForAJobDescription: action.lookingForAJobDescription,\r\n                profileImage: action.photos.large,\r\n            };\r\n        case SET_PROFILE_IMAGE:\r\n            return {\r\n                ...state,\r\n                profileImage: action.imageUrl,\r\n            };\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: !state.isFetching,\r\n            };\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPost = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const deletePost = (postId) => ({type: ADD_POST, postId});\r\nexport const setProfile = (profileData) => ({type: SET_PROFILE, ...profileData,});\r\nexport const setProfileImage = (imageUrl) => ({type: SET_PROFILE_IMAGE, imageUrl,});\r\nexport const toggleIsFetching = () => ({type: TOGGLE_IS_FETCHING,});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status,});\r\n\r\nexport const getUsersProfile = (userId) => {\r\n    return async (dispatch) => {\r\n        const data = await profileApi.getUsersProfile(userId);\r\n        dispatch(setProfile(data));\r\n    }\r\n};\r\n\r\nexport const getUsersStatus = (userId) => {\r\n    return async (dispatch) => {\r\n        const status = await profileApi.getStatus(userId);\r\n        dispatch(setStatus(status));\r\n    }\r\n};\r\n\r\nexport const changeStatus = (status) => {\r\n    return async (dispatch) => {\r\n        const data = await profileApi.updateStatus(status);\r\n        if (data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    };\r\n};\r\n\r\nexport const uploadProfileImage = (imageFile) => {\r\n    return async (dispatch) => {\r\n        const data = await profileApi.putProfilePhoto(imageFile);\r\n        if (data.resultCode === 0) {\r\n            dispatch(setProfileImage(data.data.photos.large))\r\n        }\r\n        console.log(data.messages);\r\n    }\r\n};\r\n\r\nexport default profileReducer;\r\n","const ADD_MESSAGE = 'social-network/dialogs/ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 0, Name: 'Masha'},\r\n        {id: 1, Name: 'Misha'},\r\n        {id: 2, Name: 'Sasha'},\r\n        {id: 3, Name: 'Pasha'},\r\n        {id: 4, Name: 'Dasha'},\r\n    ],\r\n\r\n    messages: [\r\n        {id: 0, text: 'buy'},\r\n        {id: 1, text: 'hello'},\r\n        {id: 2, text: 'hey'},\r\n        {id: 3, text: 'where are you'},\r\n        {id: 4, text: 'miss u'},\r\n    ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let message = {\r\n                id: state.messages.length,\r\n                // text: state.newMessageText,\r\n                text: action.newMessageText,\r\n            };\r\n            return  {\r\n                ...state,\r\n                messages: [...state.messages, message],\r\n            };\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport const addMessage = (newMessageText) => ({type: ADD_MESSAGE, newMessageText});\r\n\r\nexport default dialogsReducer;\r\n","import {authApi, securityApi} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'social-network/auth/SET_USER_DATA';\r\nconst TOGGLE_IS_CAPTCHA_REQUIRED = 'social-network/auth/TOGGLE_IS_CAPTCHA_REQUIRED';\r\nconst SET_CAPTCHA_URL = 'social-network/auth/SET_CAPTCHA_URL';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    isCaptchaRequired: false,\r\n    captchaUrl: null,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        case TOGGLE_IS_CAPTCHA_REQUIRED:\r\n            return {\r\n                ...state,\r\n                isCaptchaRequired: action.flag,\r\n            };\r\n        case SET_CAPTCHA_URL:\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.captchaUrl\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const authorizeUser = (userId, login, email, isAuth) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        payload: {userId, login, email, isAuth},\r\n    }\r\n};\r\nexport const toggleIsCaptchaRequired = (flag) => ({type: TOGGLE_IS_CAPTCHA_REQUIRED, flag});\r\nexport const setCaptchaUrl = (captchaUrl) => ({type: SET_CAPTCHA_URL, captchaUrl});\r\n\r\nexport const setAuthInfo = () => {\r\n    return async (dispatch) => {\r\n        const data = await authApi.getAuthData();\r\n        if (data.resultCode === 0) {\r\n            let {id, login, email} = data.data;\r\n            dispatch(authorizeUser(id, login, email, true));\r\n        }\r\n    }\r\n};\r\n\r\nexport const getCaptcha = () => {\r\n    return async (dispatch) => {\r\n        const data = await securityApi.getCaptcha();\r\n        dispatch(setCaptchaUrl(data.url));\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe, captcha) => {\r\n    return async (dispatch) => {\r\n        const data = await authApi.login(email, password, rememberMe, captcha);\r\n        dispatch(toggleIsCaptchaRequired(false));\r\n\r\n        if (data.resultCode === 0) {\r\n            dispatch(setAuthInfo());\r\n            dispatch(setCaptchaUrl(null));\r\n        } else {\r\n            if (data.resultCode === 10) {\r\n                dispatch(toggleIsCaptchaRequired(true));\r\n                dispatch(getCaptcha());\r\n            }\r\n            let message = data.messages.length > 0 ? data.messages[0] : 'Something wrong';\r\n            dispatch(stopSubmit('login', {_error: message}));\r\n        }\r\n    }\r\n};\r\n\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n        const data = await authApi.logout();\r\n        if (data.resultCode === 0) {\r\n            dispatch(authorizeUser(null, null, null, false));\r\n        }\r\n    }\r\n};\r\n\r\nexport default authReducer;\r\n","import {setAuthInfo} from \"./authReducer\";\r\n\r\nconst TOGGLE_IS_INITIALIZED = 'social-network/app/TOGGLE_IS_INITIALIZED';\r\n\r\nconst initialState = {\r\n    isInitialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case TOGGLE_IS_INITIALIZED :\r\n            return {\r\n                ...state,\r\n                isInitialized: action.flag,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const toggleIsInitialized = (flag) => ({type: TOGGLE_IS_INITIALIZED, flag});\r\n\r\nexport const initializeApp = () => {\r\n    return async (dispatch) => {\r\n        await dispatch(setAuthInfo());\r\n        dispatch(toggleIsInitialized(true));\r\n    }\r\n};\r\n\r\nexport default appReducer;\r\n","import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\r\nimport profileReducer from './profileReducer';\r\nimport dialogsReducer from './dialogsReducer';\r\nimport friendsReducer from './friendsReducer';\r\nimport authReducer from './authReducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    dialogPage: dialogsReducer,\r\n    profilePage: profileReducer,\r\n    friendsPage: friendsReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n/*let store = createStore(\r\n    reducers,\r\n    applyMiddleware(thunkMiddleware),\r\n);*/\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './NavBar.css'\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <div className='NavBar_padding'>\r\n            <nav >\r\n                <div><NavLink className='NavBar-NavLink' to='/profile'>Profile</NavLink></div>\r\n                <div><NavLink className='NavBar-NavLink' to='/dialogs'>Messages</NavLink></div>\r\n                {/*<div><NavLink className='NavBar-NavLink' to='/music'>Music</NavLink></div>*/}\r\n                <div><NavLink className='NavBar-NavLink' to='/friends'>Friends</NavLink></div>\r\n                <div><NavLink className='NavBar-NavLink' to='/news'>News</NavLink></div>\r\n                {/*<div><NavLink className='NavBar-NavLink' to='/settings'>Settings</NavLink></div>*/}\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport './News.css'\r\n\r\nconst News = () => {\r\n    return (\r\n        <div className='news'>\r\n            <h1>У Маши день рождения!!!!!!</h1>\r\n            <img width='400px' src='https://i.pinimg.com/originals/d0/40/d3/d040d35c4329b603f887b7344af88c64.jpg'/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default News\r\n","import React from 'react';\r\nimport './Message.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div>\r\n            {props.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react';\r\nimport './Dialog.css'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Dialog = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return (\r\n        <div >\r\n            <NavLink to={path} className='Dialog-NavLink'>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialog\r\n","import React from \"react\";\r\nimport './FormsControl.css'\r\n\r\nexport const FormControl = ({input, meta, ...props}) => {\r\n    let elementClassName = meta.touched && meta.error ? 'FormError-Input' : null;\r\n    return (\r\n        <div className='FormError'>\r\n            <props.element {...input} {...props}\r\n                           className={elementClassName}\r\n            />\r\n            {meta.touched && meta.error && <span className='FormError-Text'>{meta.error}</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n    return (\r\n        <FormControl {...props} element='textarea'/>\r\n    )\r\n};\r\n\r\nexport const Input = (props) => {\r\n    return (\r\n        <FormControl {...props} element='input'/>\r\n    )\r\n};\r\n","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => {\r\n    return (value) => {\r\n        if (value && value.length > maxLength) return `Max length is ${maxLength} symbols!`;\r\n        return undefined;\r\n    }\r\n}\r\n","import {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\r\nimport React from \"react\";\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} >\r\n            <Field\r\n                component={Textarea}\r\n                name={'newMessageText'}\r\n                placeholder={'Enter new message:'}\r\n                validate={[required, maxLength100]}\r\n            />\r\n            <div>\r\n                <button>add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'dialogAddMessageForm'\r\n})(AddMessageForm)\r\n","import React from 'react';\r\nimport './Dialogs.css'\r\nimport Message from './Message/Message';\r\nimport Dialog from './Dialog/Dialog';\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n    const dialogsElements = props.dialogPage.dialogs.map((dialog) => {\r\n        return (\r\n            <Dialog\r\n                id={dialog.id}\r\n                name={dialog.Name}\r\n                key={dialog.id}\r\n            />\r\n        );\r\n    });\r\n\r\n    const messagesElements = props.dialogPage.messages.map((message) => {\r\n        return <Message text={message.text} key={message.id}/>\r\n    });\r\n\r\n    const addMessage = (formData) => {\r\n        props.addMessage(formData.newMessageText);\r\n    }\r\n\r\n    return (\r\n        <div className='Dialogs_gridTemplate Dialogs_padding'>\r\n            <div >\r\n                {dialogsElements}\r\n            </div>\r\n            <div >\r\n                {messagesElements}\r\n                <AddMessageForm onSubmit={addMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs\r\n","import React from 'react';\r\nimport './Dialogs.css'\r\nimport {\r\n    addMessage,\r\n} from '../../Redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from \"redux\";\r\nimport withAuthRedirect from \"../../hocs/withAuthRedirect\";\r\n\r\nclass DialogsContainer extends React.Component {\r\n    render() {\r\n        return <Dialogs {...this.props}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogPage: state.dialogPage,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {\r\n        addMessage,\r\n    }),\r\n)(DialogsContainer)\r\n","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        statusValue: this.props.status, //TODO почему-то при обновлении страницы инпут пустой,\r\n        // если перезайти на вкладку(не обновлять) то инпут снова синхронизированн\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({statusValue: this.props.status,});\r\n        }\r\n    }\r\n\r\n    toggleEditMode = (flag) => {\r\n        this.setState({\r\n            editMode: flag,\r\n        });\r\n    };\r\n\r\n    saveStatus = () => {\r\n        this.props.changeStatus(this.state.statusValue);\r\n        this.toggleEditMode(false);\r\n    };\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({statusValue: e.currentTarget.value});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.editMode && (\r\n                    <div>\r\n                        <input\r\n                            type='text'\r\n                            value={this.state.statusValue}\r\n                            onChange={this.onStatusChange}\r\n                            onBlur={this.saveStatus}\r\n                            autoFocus\r\n                        />\r\n                    </div>\r\n                )}\r\n                {!this.state.editMode && (\r\n                    <div onDoubleClick={() => this.toggleEditMode(true)}>\r\n                        <span>{this.props.status  || 'How are you doing?'}</span>\r\n                    </div>\r\n                )}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;\r\n","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    const saveStatus = () => {\r\n        props.changeStatus(status);\r\n        setEditMode(false);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    return (\r\n        <>\r\n            {editMode && (\r\n                <div>\r\n                    <span>Status:</span>\r\n                    <input\r\n                        type='text'\r\n                        value={status}\r\n                        onChange={onStatusChange}\r\n                        onBlur={saveStatus}\r\n                        autoFocus\r\n                    />\r\n                </div>\r\n            )}\r\n            {!editMode && (\r\n                <div onDoubleClick={() => setEditMode(true)}>\r\n                    <span>Status:</span>\r\n                    <span>{props.status || 'How are you doing?'}</span>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\n\r\nconst AboutMe = (props) => {\r\n    return (\r\n        <div>\r\n            <div>{props.fullName}</div>\r\n            <hr />\r\n            <div>{props.aboutMe}</div>\r\n            <div>\r\n                Looking for a job: {props.lookingForAJob ? 'yes' : 'no'}\r\n            </div>\r\n            <div>{props.lookingForAJobDescription}</div>\r\n            <div>\r\n                {Object.keys(props.contacts).map((name, id) => {\r\n                    return (\r\n                        <Contact key={id} contactName={name} contactValue={props.contacts[name]}/>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst Contact = (props) => {\r\n    return (\r\n        <div>\r\n            {props.contactName}: {props.contactValue}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AboutMe;\r\n","import React from 'react';\r\nimport './ProfileInfo.css'\r\nimport ProfileStatus from './ProfileStatus/ProfileStatus'\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\r\nimport defaultUserIcon from '../../../res/userIcon.png';\r\nimport AboutMe from \"./AboutMe/AboutMe\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    const onFileSubmit = (event) => {\r\n        if (event.target.files.length) {\r\n            props.uploadProfileImage(event.target.files[0]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='ProfileInfo-Wrapper'>\r\n            <div>\r\n                <div>\r\n                    <img className='ProfileInfo-Image'\r\n                         src={props.profileImage || defaultUserIcon}/>\r\n                </div>\r\n                {props.isOwner && (\r\n                    // <UploadOutlined onChange={onFileSubmit}/> //TODO разобраться с upload\r\n                    <input className='FileInput' type='file' onChange={onFileSubmit}/>\r\n                )}\r\n                <ProfileStatusWithHooks\r\n                    status={props.status}\r\n                    changeStatus={props.changeStatus}\r\n                />\r\n            </div>\r\n            <div>\r\n                <AboutMe\r\n                    fullName={props.fullName}\r\n                    aboutMe={props.aboutMe}\r\n                    contacts={props.contacts}\r\n                    lookingForAJob={props.lookingForAJob}\r\n                    lookingForAJobDescription={props.lookingForAJobDescription}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo\r\n","import React from 'react';\r\nimport './Post.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className='post'>\r\n            <img src='https://yt3.ggpht.com/a/AGF-l78D8sRdVCMJf7gg7Is2apd6wxydsVsoRJ6zPQ=s900-c-k-c0xffffffff-no-rj-mo'/>\r\n            {props.message}\r\n            <div>\r\n                {props.likeCount} likes\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post\r\n","import {maxLengthCreator, required} from \"../../../../utils/validators\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../../common/FormsControls\";\r\nimport React from \"react\";\r\n\r\nconst maxLength200 = maxLengthCreator(200);\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    name='newPostText'\r\n                    component={Textarea}\r\n                    placeholder='Enter new post text'\r\n                    validate={[required, maxLength200]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'profileAddPostForm',\r\n})(AddPostForm)\r\n","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport './MyPosts.css'\r\nimport AddPostForm from \"./AddPostForm/AddPostForm\";\r\n\r\n\r\nconst MyPosts = (props) => {\r\n    let postElements = props.posts.map((post) => {\r\n        return <Post\r\n            message={post.message}\r\n            likeCount={post.likeCount}\r\n            key={post.id}\r\n        />\r\n    });\r\n\r\n    let addPost = (formData) => {\r\n        props.addPost(formData.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className='my-posts__new-post'>\r\n                <AddPostForm onSubmit={addPost}/>\r\n            </div>\r\n            <div className='my-posts__post-list'>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport './MyPosts.css'\r\nimport {addPost} from '../../../Redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {\r\n    addPost,\r\n})(MyPosts);\r\n\r\nexport default MyPostsContainer\r\n","import React from 'react';\r\nimport './Profile.css'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className='Profile_padding'>\r\n            <ProfileInfo {...props} />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import * as React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {addPost, changeStatus, getUsersProfile, getUsersStatus, uploadProfileImage} from \"../../Redux/profileReducer\";\r\nimport {toggleIsFetching} from \"../../Redux/friendsReducer\";\r\nimport Preloader from \"../common/Preloader\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    //TODO toggle isFetching вынести в отдельный редюсер\r\n    //TODO все перекинуть в hooks либо деструктуризировать пропсы\r\n    componentDidMount() {\r\n        // this.props.toggleIsFetching();\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId\r\n        || (!this.props.match.params.userId && this.props.authorizedUserId !== prevProps.authorizedUserId)) {\r\n           this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId || this.props.authorizedUserId;\r\n        if (!userId) {\r\n            this.props.history.push('/login'); //TODO remove deprecated code\r\n        }\r\n        this.props.getUsersProfile(userId);\r\n        this.props.getUsersStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        const isOwner = !this.props.match.params.userId\r\n            || this.props.match.params.userId === this.props.authorizedUserId;\r\n        return (\r\n            <>\r\n                {/*{this.props.isFetching && <Preloader />}*/}\r\n                <Profile {...this.props} isOwner={isOwner}/>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth,\r\n        ...state.profilePage,\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {\r\n        addPost,\r\n        toggleIsFetching,\r\n        getUsersProfile,\r\n        getUsersStatus,\r\n        changeStatus,\r\n        uploadProfileImage,\r\n    }),\r\n)(ProfileContainer)\r\n","import React from 'react'\r\nimport './Header.css'\r\nimport {NavLink} from 'react-router-dom';\r\nimport logo from '../../res/logo.png'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className='Header'>\r\n            <img className='SiteLogo' src={logo}/>\r\n            <div className='LoginBlock'>\r\n                {props.isAuth && ( //TODO сделать красиво\r\n                    <div>\r\n                        {props.login}\r\n                        <br />\r\n                        <button onClick={props.logout}>Logout</button>\r\n                    </div>\r\n                )}\r\n                {!props.isAuth && <NavLink to='/login'>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import Header from './Header';\r\nimport React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {logout} from '../../Redux/authReducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    logout,\r\n})(HeaderContainer);\r\n","import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Input} from \"../../common/FormsControls\";\r\nimport {required} from \"../../../utils/validators\";\r\nimport '../../common/FormsControl.css'\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    placeholder={'Login'}\r\n                    name={'login'}\r\n                    type='text'\r\n                    component={Input}\r\n                    validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    placeholder={'Password'}\r\n                    name={'password'}\r\n                    type='password'\r\n                    component={Input}\r\n                    validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    name={'rememberMe'}\r\n                    type='checkbox'\r\n                    component={Input}\r\n                />\r\n                remember me\r\n            </div>\r\n            {props.error && (\r\n                <div className=\"FormError_summary\">\r\n                    Incorrect login or password\r\n                </div>\r\n            )}\r\n            {props.isCaptchaRequired && <img src={props.captchaUrl}/>}\r\n            {props.isCaptchaRequired && (\r\n                <div>\r\n                    <Field\r\n                        name={'captcha'}\r\n                        placeholder={'captcha'}\r\n                        type='text'\r\n                        validate={[required]}\r\n                        component={Input}\r\n                    />\r\n                </div>\r\n            )}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default reduxForm({form: 'login'})(LoginForm);\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../Redux/authReducer\";\r\nimport LoginForm from \"./LoginForm/LoginForm\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass Login extends React.Component {\r\n    render() {\r\n        const onSubmit = (formData) => {\r\n            this.props.login(formData.login, formData.password, formData.rememberMe, formData.captcha);\r\n        };\r\n\r\n        if (this.props.isAuth) return <Redirect to='/profile'/>;\r\n\r\n        return (\r\n            <div>\r\n                <h1>Login</h1>\r\n                <LoginForm\r\n                    onSubmit={onSubmit}\r\n                    isCaptchaRequired={this.props.isCaptchaRequired}\r\n                    captchaUrl={this.props.captchaUrl}\r\n                />\r\n                <p>If you don't have an account, use test login and password.</p>\r\n                <p>Login: free@samuraijs.com</p>\r\n                <p>Password: free</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        isCaptchaRequired: state.auth.isCaptchaRequired,\r\n        captchaUrl: state.auth.captchaUrl,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    login\r\n})(Login) //TODO сделать контейнер\r\n","import {Provider} from \"react-redux\";\r\nimport store from \"../Redux/reduxStore\";\r\nimport React from \"react\";\r\n\r\nconst withStoreProvider = (Component) => {\r\n    const withStoreProviderComponent = (props) => {\r\n        return (\r\n            <Provider store={store}>\r\n                <Component {...props} />\r\n            </Provider>\r\n        )\r\n    };\r\n\r\n    withStoreProviderComponent.displayName = `withStoreProvider(${Component.displayName\r\n    || Component.name\r\n    || 'Component'})`;\r\n\r\n    return withStoreProviderComponent;\r\n};\r\n\r\nexport default withStoreProvider;\r\n","import React, {Suspense} from \"react\";\r\nimport Preloader from \"../components/common/Preloader\";\r\n\r\nconst withSuspense = (Component) => {\r\n    const withSuspenseComponent = (props) => {\r\n        return (\r\n            <Suspense fallback={<Preloader />}>\r\n                <Component {...props} />\r\n            </Suspense>\r\n        );\r\n    };\r\n\r\n    withSuspenseComponent.displayName = `withSuspense(${Component.displayName\r\n    || Component.Name\r\n    || 'Component'})`;\r\n\r\n    return withSuspenseComponent;\r\n};\r\n\r\nexport default withSuspense;\r\n","import React from \"react\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nconst withHashRouter = (Component) => {\r\n    const withHashRouterComponent = (props) => {\r\n        return (\r\n            <HashRouter>\r\n                <Component {...props} />\r\n            </HashRouter>\r\n        );\r\n    };\r\n\r\n    withHashRouterComponent.displayName = `withHashRouter(${Component.displayName\r\n    || Component.name\r\n    || 'Component'})`;\r\n\r\n    return withHashRouterComponent;\r\n};\r\n\r\nexport default withHashRouter;\r\n","import React, {lazy} from 'react';\r\nimport './App.css';\r\nimport NavBar from './components/NavBar/NavBar';\r\nimport {Redirect, Route, withRouter} from 'react-router-dom';\r\nimport Music from './components/Music/Music';\r\nimport News from './components/News/News';\r\nimport Settings from './components/Settings/Settings';\r\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./Redux/appReducer\";\r\nimport Preloader from \"./components/common/Preloader\";\r\nimport withBrowserRouter from \"./hocs/withBrowserRouter\";\r\nimport withStoreProvider from \"./hocs/withStoreProvider\";\r\nimport withSuspense from \"./hocs/withSuspense\";\r\nimport withHashRouter from \"./hocs/withHashRouter\";\r\nimport {Switch} from \"react-router\";\r\n\r\nconst FriendsContainer = React.lazy(() => import(\"./components/Friends/FriendsContainer\"));\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.isInitialized) {\r\n            return <Preloader/>\r\n        }\r\n        // TODO content component\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <div className='app-wrapper__header'><HeaderContainer/></div>\r\n                <div className='app-wrapper__nav'><NavBar/></div>\r\n                <div className='app-wrapper__content'>\r\n                    <Switch>\r\n                        <Redirect exact from=\"/\" to=\"/profile\" />\r\n                        <Route path='/dialogs' render={() => <DialogsContainer/>}/>\r\n                        <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\r\n                        <Route path='/news' render={() => <News/>}/>\r\n                        {/*<Route path='/music' render={() => <Music/>}/>*/}\r\n                        <Route path='/friends' render={() => withSuspense(FriendsContainer)()}/>\r\n                        {/*<Route path='/settings' render={() => <Settings/>}/>*/}\r\n                        <Route path='/login' render={() => <Login/>}/>\r\n                        <Route path='*' render={() => <h1>404: Page not found</h1>} />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isInitialized: state.app.isInitialized,\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    withHashRouter,\r\n    withStoreProvider,\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}),\r\n)(App);\r\n","import React from 'react';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from \"./Redux/reduxStore\"\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n","import preloader from \"../../res/preloader.svg\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n        <div>\r\n            <img className='preloader' src={preloader} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;\r\n","export const updateObjectInArray = (objArray, objKeyName, objKeyValue, newObjProps) => {\r\n    return objArray.map(obj => {\r\n        if(obj[objKeyName] === objKeyValue) {\r\n            return {...obj, ...newObjProps}\r\n        }\r\n        return obj;\r\n    })\r\n};\r\n","import {usersApi} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/updateObjectInArray\";\r\n\r\nconst SET_FRIENDS = 'social-network/friends/SET_FRIENDS';\r\nconst TOGGLE_FOLLOWED = 'social-network/friends/TOGGLE_FOLLOWED';\r\nconst SET_CURRENT_PAGE = 'social-network/friends/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'social-network/friends/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'social-network/friends/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_IN_PROGRESS = 'social-network/friends/TOGGLE_IS_FOLLOWING_IN_PROGRESS';\r\n\r\nlet initialState = {\r\n    friends: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 20,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    isFollowingInProgress: false,\r\n};\r\n\r\nconst friendsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_FRIENDS:\r\n            return {\r\n                ...state,\r\n                friends: [...action.friends],\r\n            };\r\n        case TOGGLE_FOLLOWED:\r\n            return {\r\n                ...state,\r\n                friends: updateObjectInArray(\r\n                    state.friends,\r\n                    'id',\r\n                    action.friendId,\r\n                    {followed: action.flag,}\r\n                    ),\r\n            };\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.pageNumber,\r\n            };\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount,\r\n            };\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.flag,\r\n            };\r\n        case TOGGLE_IS_FOLLOWING_IN_PROGRESS:\r\n            return {\r\n                ...state,\r\n                isFollowingInProgress: action.flag,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setFriends = (friends) => ({type: SET_FRIENDS, friends,});\r\nexport const toggleFollowed = (friendId, flag) => ({type: TOGGLE_FOLLOWED, friendId, flag});\r\nexport const setCurrentPage = (pageNumber) => ({type: SET_CURRENT_PAGE, pageNumber,});\r\nexport const setTotalUsersCount = (totalCount) => ({type: SET_TOTAL_USERS_COUNT, totalCount,});\r\nexport const toggleIsFetching = (flag) => ({type: TOGGLE_IS_FETCHING, flag});\r\nexport const toggleIsFollowingInProgress = (flag) => ({type: TOGGLE_IS_FOLLOWING_IN_PROGRESS, flag});\r\n\r\nexport const getFriends = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        const data = await usersApi.getUsers(currentPage, pageSize);\r\n\r\n        dispatch(setFriends(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n        dispatch(toggleIsFetching(false));\r\n    }\r\n};\r\n\r\nexport const toggleFollowingFriend = (friendId, flag) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFollowingInProgress(true));\r\n\r\n        const asyncFunction = flag ? usersApi.follow : usersApi.unfollow;\r\n        const data = await asyncFunction(friendId);\r\n\r\n        if (data.resultCode === 0) {\r\n            dispatch(toggleFollowed(friendId, flag));\r\n        }\r\n        dispatch(toggleIsFollowingInProgress(false));\r\n    }\r\n};\r\n\r\nexport default friendsReducer\r\n","module.exports = __webpack_public_path__ + \"static/media/userIcon.d988dee4.png\";"],"sourceRoot":""}