{"version":3,"sources":["res/userIcon.png","components/Friends/Friend/Friend.jsx","components/Friends/Friends.jsx","Redux/friendsSelectors.js","components/Friends/FriendsContainer.jsx"],"names":["module","exports","Friend","props","key","id","className","to","width","src","photos","small","defaultUserIcon","name","status","disabled","isFollowingInProgress","onClick","toggleFollowingFriend","followed","Friends","onChange","onPageChanged","current","currentPage","defaultPageSize","pageSize","total","totalUsersCount","showSizeChanger","showQuickJumper","friends","map","friend","getFriendsSup","createSelector","state","friendsPage","filter","f","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getIsFollowingInProgress","FriendsContainer","newPage","setCurrentPage","getFriends","this","length","Preloader","React","Component","compose","withAuthRedirect","connect","getFriendsArray","isAuth","auth","toggleFollowed","toggleIsFollowingInProgress"],"mappings":"2GAAAA,EAAOC,QAAU,IAA0B,sC,qMC4B5BC,G,OAvBA,SAACC,GACZ,OACI,yBAAKC,IAAKD,EAAME,IACZ,yBAAKC,UAAU,gCACX,kBAAC,IAAD,CAASA,UAAU,QAAQC,GAAE,mBAAcJ,EAAME,KAC7C,yBAAKG,MAAM,OAAOC,IAAKN,EAAMO,OAAOC,OAASC,QAGrD,yBAAKN,UAAU,gCACX,6BAAMH,EAAMU,MACZ,6BAAMV,EAAMW,SAEhB,6BACI,4BAAQC,SAAUZ,EAAMa,sBAAuBC,QAAS,WACpDd,EAAMe,sBAAsBf,EAAME,IAAKF,EAAMgB,YAE5ChB,EAAMgB,SAAW,WAAa,cCepCC,EA3BC,SAACjB,GACb,OACI,6BAEI,yBAAKG,UAAU,mBACX,kBAAC,IAAD,CACIA,UAAU,kBACVe,SAAUlB,EAAMmB,cAChBC,QAASpB,EAAMqB,YACfC,gBAAiBtB,EAAMuB,SACvBC,MAAOxB,EAAMyB,gBACbC,iBAAiB,EACjBC,iBAAe,KAGvB,yBAAKxB,UAAU,mBACVH,EAAM4B,QAAQC,KAAI,SAACC,GAChB,OACI,kBAAC,EAAD,eAAQ3B,UAAU,mBAAsB2B,EAAxC,CACQf,sBAAuBf,EAAMe,+B,yCCxBhDgB,EAAgBC,aAFH,SAACC,GAAD,OAAWA,EAAMC,YAAYN,WAEC,SAACA,GACrD,OAAOA,EAAQO,QAAO,SAAAC,GAAC,OAAI,QAElBC,EAAc,SAACJ,GAAD,OAAWA,EAAMC,YAAYX,UAC3Ce,EAAqB,SAACL,GAAD,OAAWA,EAAMC,YAAYT,iBAClDc,EAAiB,SAACN,GAAD,OAAWA,EAAMC,YAAYb,aAC9CmB,EAAgB,SAACP,GAAD,OAAWA,EAAMC,YAAYO,YAC7CC,EAA2B,SAACT,GAAD,OAAWA,EAAMC,YAAYrB,uBCS/D8B,E,4MAOFxB,cAAgB,SAACyB,GACb,EAAK5C,MAAM6C,eAAeD,GAC1B,EAAK5C,MAAM8C,WAAWF,EAAS,EAAK5C,MAAMuB,W,kEAPR,IAA9BwB,KAAK/C,MAAM4B,QAAQoB,QACnBD,KAAK/C,MAAM8C,WAAWC,KAAK/C,MAAMqB,YAAa0B,KAAK/C,MAAMuB,Y,+BAU7D,OAAO,oCACFwB,KAAK/C,MAAMyC,YAAc,kBAACQ,EAAA,EAAD,MAC1B,kBAAC,EAAD,CAASrB,QAASmB,KAAK/C,MAAM4B,QACpBH,gBAAiBsB,KAAK/C,MAAMyB,gBAC5BF,SAAUwB,KAAK/C,MAAMuB,SACrBF,YAAa0B,KAAK/C,MAAMqB,YACxBF,cAAe4B,KAAK5B,cACpB0B,eAAgBE,KAAK/C,MAAM6C,eAC3BhC,sBAAuBkC,KAAK/C,MAAMa,sBAClCE,sBAAuBgC,KAAK/C,MAAMe,6B,GAtBxBmC,IAAMC,WAuCtBC,sBACXC,IACAC,aAdkB,SAACrB,GACnB,MAAO,CACHL,QAAS2B,EAAgBtB,GACzBV,SAAUc,EAAYJ,GACtBR,gBAAiBa,EAAmBL,GACpCZ,YAAakB,EAAeN,GAC5BQ,WAAYD,EAAcP,GAC1BpB,sBAAuB6B,EAAyBT,GAChDuB,OAAQvB,EAAMwB,KAAKD,UAME,CACrBE,mBACAb,mBACAc,gCACAb,eACA/B,4BAPOqC,CASbT","file":"static/js/4.b2a87efd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/userIcon.cfd09e88.png\";","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport defaultUserIcon from '../../../res/userIcon.png';\r\nimport './Friend.css'\r\n\r\nconst Friend = (props) => {\r\n    return (\r\n        <div key={props.id} >\r\n            <div className='Friend_inline Friend_padding'>\r\n                <NavLink className='image' to={`/profile/${props.id}`}>\r\n                    <img width='40px' src={props.photos.small || defaultUserIcon}/>\r\n                </NavLink>\r\n            </div>\r\n            <div className='Friend_inline Friend_padding'>\r\n                <div>{props.name}</div>\r\n                <div>{props.status}</div>\r\n            </div>\r\n            <div>\r\n                <button disabled={props.isFollowingInProgress} onClick={() => {\r\n                    props.toggleFollowingFriend(props.id, !props.followed);\r\n                }}>\r\n                    {props.followed ? 'Unfollow' : 'Follow'}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friend;\r\n","import React from 'react';\r\nimport './Friends.css'\r\nimport defaultUserIcon from \"../../res/userIcon.png\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"./Paginator/Paginator\";\r\nimport {Pagination} from \"antd\";\r\nimport 'antd/dist/antd.css';\r\nimport Friend from \"./Friend/Friend\";\r\n\r\nconst Friends = (props) => {\r\n    return (\r\n        <div>\r\n            {/*<Paginator {...props}/>*/}\r\n            <div className='Friends_padding'>\r\n                <Pagination\r\n                    className='Friends_padding'\r\n                    onChange={props.onPageChanged}\r\n                    current={props.currentPage}\r\n                    defaultPageSize={props.pageSize}\r\n                    total={props.totalUsersCount}\r\n                    showSizeChanger={false} //TODO исправить чтоб работало\r\n                    showQuickJumper\r\n                />\r\n            </div>\r\n            <div className='Friends_padding'>\r\n                {props.friends.map((friend) => {\r\n                    return (\r\n                        <Friend className='Friends_padding' {...friend}\r\n                                toggleFollowingFriend={props.toggleFollowingFriend}/>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Friends\r\n","import {createSelector} from \"reselect\";\r\n\r\nexport const getFriends = (state) => state.friendsPage.friends;\r\n//пример работы create selector\r\nexport const getFriendsSup = createSelector(getFriends, (friends) => {\r\n    return friends.filter(f => true);\r\n});\r\nexport const getPageSize = (state) => state.friendsPage.pageSize;\r\nexport const getTotalUsersCount = (state) => state.friendsPage.totalUsersCount;\r\nexport const getCurrentPage = (state) => state.friendsPage.currentPage;\r\nexport const getIsFetching = (state) => state.friendsPage.isFetching;\r\nexport const getIsFollowingInProgress = (state) => state.friendsPage.isFollowingInProgress;\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Friends from './Friends';\r\nimport {\r\n    getFriends,\r\n    setCurrentPage,\r\n    toggleFollowed, toggleFollowingFriend, toggleIsFollowingInProgress,\r\n} from '../../Redux/friendsReducer';\r\nimport Preloader from \"../common/Preloader\";\r\nimport withAuthRedirect from \"../../hocs/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getFriendsSup as getFriendsArray,\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getIsFollowingInProgress,\r\n    getPageSize,\r\n    getTotalUsersCount\r\n} from \"../../Redux/friendsSelectors\";\r\n\r\nclass FriendsContainer extends React.Component {\r\n    componentDidMount() {\r\n        if (this.props.friends.length === 0) {\r\n            this.props.getFriends(this.props.currentPage, this.props.pageSize);\r\n        }\r\n    }\r\n\r\n    onPageChanged = (newPage) => {\r\n        this.props.setCurrentPage(newPage);\r\n        this.props.getFriends(newPage, this.props.pageSize);\r\n    };\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching && <Preloader/>}\r\n            <Friends friends={this.props.friends}\r\n                     totalUsersCount={this.props.totalUsersCount}\r\n                     pageSize={this.props.pageSize}\r\n                     currentPage={this.props.currentPage}\r\n                     onPageChanged={this.onPageChanged}\r\n                     setCurrentPage={this.props.setCurrentPage}\r\n                     isFollowingInProgress={this.props.isFollowingInProgress}\r\n                     toggleFollowingFriend={this.props.toggleFollowingFriend}/>\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        friends: getFriendsArray(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        isFollowingInProgress: getIsFollowingInProgress(state),\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {\r\n        toggleFollowed,\r\n        setCurrentPage,\r\n        toggleIsFollowingInProgress,\r\n        getFriends,\r\n        toggleFollowingFriend,\r\n    }),\r\n)(FriendsContainer);\r\n\r\n\r\n\r\n"],"sourceRoot":""}